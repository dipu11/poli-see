{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/wentaoguo/Desktop/code/privacy-transparency/app.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"__webpack_exports__\",\"e\",\"Error\",\"code\",\"pol\",\"vis\",\"nodes\",\"node_types\",\"link_types\",\"use_types\",\"bg_circles_rs\",\"nodes_s\",\"links_s\",\"central_node\",\"element_types\",\"NODE\",\"LINK\",\"USE\",\"NUM_LAYERS\",\"OPTS_PAT_ID\",\"links\",\"saved_elt_s\",\"saved_elt_connected_elts_ids\",\"hovered_elt_connected_elts_ids\",\"svg_s\",\"d3\",\"g_s\",\"append\",\"node_panel_box_s\",\"link_panel_box_s\",\"node_panel_s\",\"select\",\"link_panel_s\",\"node_panel_opts_box_s\",\"node_panel_actions_box_s\",\"link_panel_graphic_s\",\"panel_close_btns_s\",\"tree\",\"primary_nodes\",\"nodeById\",\"id\",\"find\",\"linkTypeById\",\"useTypeById\",\"nodeRadius\",\"layer\",\"display\",\"node\",\"dist_from_center_proportions\",\"linkArrowPoints\",\"source\",\"dest\",\"linkPointsFromLen\",\"linkLen\",\"x\",\"y\",\"outline_width\",\"link\",\"head_to_node_dist\",\"source_x\",\"source_y\",\"dest_x\",\"dest_y\",\"subtract_len\",\"Math\",\"sqrt\",\"pow\",\"len\",\"len_to_head\",\"head_len\",\"w1\",\"width\",\"w2\",\"head_width\",\"linkRotation\",\"atan2\",\"PI\",\"nodeOutlineColor\",\"identifiable\",\"outline_color_identifiable\",\"outline_color_unidentifiable\",\"linkFillColor\",\"all_data\",\"fill_color_all_data\",\"fill_color_identifiable\",\"fill_color_unidentifiable\",\"linkOutlineColor\",\"linkOutlineColorByDestId\",\"useTypeFillColor\",\"use_icon\",\"unknown\",\"fill_color_unknown\",\"fill_color_normal\",\"getNodePat\",\"type\",\"getLinkPat\",\"getOptsPat\",\"makeStick\",\"child\",\"num_ancestors\",\"children\",\"updateNodePanel\",\"fill_color\",\"outline_color\",\"node_panel\",\"style\",\"html\",\"label\",\"text\",\"opts\",\"opts_text\",\"actions\",\"track_links\",\"use_all_data\",\"uses\",\"length\",\"push\",\"elt_type\",\"successor_links\",\"includes\",\"data_handler\",\"selectAll\",\"remove\",\"action_divs_s\",\"data\",\"enter\",\"classed\",\"icon_r_full\",\"action_divs_svgs_s\",\"attr\",\"action_divs_use_svgs_s\",\"filter\",\"action_divs_link_svgs_s\",\"successor_id\",\"linkFillColorByDestId\",\"display_on_link\",\"link_icon_on_link\",\"link_icon\",\"description\",\"updatePanel\",\"datum\",\"link_panel\",\"node_r_full\",\"link_panel_graphic\",\"dist_between_nodes\",\"updateLinkPanel\",\"hidePanels\",\"changeSelectionOutline\",\"interrupt\",\"transition\",\"transitionNodeSelection\",\"transitionLinkSelection\",\"findNodeConnectedEltIds\",\"connected_ids\",\"concat\",\"map\",\"primary\",\"onMouseEnter\",\"outline_color_focus\",\"outline_width_focus\",\"connected_nodes_s\",\"connected_links_s\",\"onMouseLeave\",\"onClick\",\"new_clicked_elt_connected_nodes_ids\",\"outline_color_saved\",\"outline_width_saved\",\"main\",\"title\",\"intro\",\"node_pats_identifiable\",\"image_identifiable\",\"node_pats_unidentifiable\",\"image_unidentifiable\",\"link_pats_identifiable\",\"link_pats_unidentifiable\",\"use_pats\",\"image\",\"opts_pat\",\"opts_node_icon\",\"opts_icon\",\"setUpPats\",\"display_r\",\"link_icon_r_full\",\"opts_panel_icon_r_full\",\"opts_panel_icon\",\"node_panel_extra_space\",\"padding\",\"node_panel_max_height\",\"link_panel_graphic_height\",\"link_panel_extra_space\",\"link_panel_max_height\",\"margin_bottom\",\"bg_circle\",\"r_proportions\",\"size\",\"layer_title\",\"space_in_pi_radians\",\"separation\",\"a\",\"b\",\"parent\",\"depth\",\"j\",\"tree_nodes\",\"makeTree\",\"root\",\"slice\",\"siblings\",\"s_branch\",\"descendants\",\"_loop\",\"offset\",\"tree_n\",\"cos\",\"sin\",\"r_for_text\",\"font_size\",\"dist_from_edge\",\"provider_name\",\"color\",\"on\",\"this\",\"raise\",\"cx\",\"cy\",\"url\",\"URL\",\"document\",\"searchParams\",\"v\",\"then\",\"policy_json\",\"visual_json\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"\\n\\nimport * as d3 from \\\"d3/d3.min\\\"\\n\\n// enumerated constants for some types of elements\\nconst element_types =\\n{\\n  NODE: \\\"node\\\",\\n  LINK: \\\"link\\\",\\n  USE: \\\"use\\\"\\n}\\n\\nconst NUM_LAYERS = 3;\\nconst OPTS_PAT_ID = \\\"pat_opts\\\";\\n\\n// objects for policy- and visual-related data\\nvar pol;\\nvar vis;\\n\\n// arrays for nodes and links\\nvar nodes;\\nvar links = [];\\n\\n// arrays for node, link, and use types\\nvar node_types;\\nvar link_types;\\nvar use_types;\\n\\n// selection of the saved element\\nvar saved_elt_s = null;\\n// array of ids of elements connected with the saved element\\nvar saved_elt_connected_elts_ids = [];\\n// array of ids of elements connected with the currently hovered element\\nvar hovered_elt_connected_elts_ids = [];\\n\\n\\n// selection of svg to contain the main body of the graph\\nvar svg_s = d3.select(\\\"#canvas\\\");\\n// selection of g to be placed at center of the graph\\nvar g_s = svg_s.append(\\\"g\\\");\\n\\n// selections of div containers for panels and related display elements\\nvar node_panel_box_s = d3.select(\\\"#node_panel_box\\\");\\nvar link_panel_box_s = d3.select(\\\"#link_panel_box\\\");\\n\\n// selections of div panels to display additional information about nodes and links\\nvar node_panel_s = node_panel_box_s.select(\\\"#node_panel\\\");\\nvar link_panel_s = link_panel_box_s.select(\\\"#link_panel\\\");\\n\\n// selections of divs to display information about options available to the user regarding the data as well as\\n// permitted actions that can be performed by the entity handling the data\\nvar node_panel_opts_box_s = node_panel_s.select(\\\"#node_panel_opts_box\\\");\\nvar node_panel_actions_box_s = node_panel_s.select(\\\"#node_panel_actions_box\\\");\\n\\n// selection of svg to display graphic above link panel\\nvar link_panel_graphic_s = link_panel_box_s.select(\\\"#link_panel_graphic\\\");\\n\\n// selection of panel close buttons\\nvar panel_close_btns_s = d3.selectAll(\\\".close_btn\\\");\\n\\n// array containing radii of background circles\\nvar bg_circles_rs;\\n\\n// node-mapping object to generate tree\\nvar root;\\n// D3 tree to organize nodes\\nvar tree = d3.tree();\\n\\n// selection of nodes to represent personal data\\nvar nodes_s;\\n// selection of links to connect nodes\\nvar links_s;\\n\\n// central node\\nvar central_node;\\n// array of primary nodes, direct successors of the central node in layer 1 that are not all-data nodes\\nvar primary_nodes = [];\\n\\n\\n\\n// return the node with a given id\\nfunction nodeById(id)\\n{\\n  return nodes.find(n => n.id === id);\\n}\\n\\n// return the link with a given id\\nfunction linkById(id)\\n{\\n  return links.find(l => l.id === id);\\n}\\n\\n// return the node type with a given id\\nfunction nodeTypeById(id)\\n{\\n  return node_types.find(t => t.id === id);\\n}\\n\\n// return the link type with a given id\\nfunction linkTypeById(id)\\n{\\n  return link_types.find(t => t.id === id);\\n}\\n\\n// return the use type with a given id\\nfunction useTypeById(id)\\n{\\n  return use_types.find(t => t.id === id);\\n}\\n\\n// return the radius of a node\\nfunction nodeRadius(n)\\n{\\n  if(n.layer === 0)\\n  {\\n    return vis.display.r * vis.node.dist_from_center_proportions[1];\\n  }\\n  return vis.node.r;\\n}\\n\\n// return a string containing the points for a link polyline arrow pointing down, given a link\\nfunction linkArrowPoints(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n  var len = linkLen(source.x, source.y, dest.x, dest.y, dest.r + vis.node.outline_width +\\n    vis.link.head_to_node_dist);\\n  return linkPointsFromLen(len);\\n}\\n\\n// return the length of a link polyline arrow, given relevant values\\nfunction linkLen(source_x, source_y, dest_x, dest_y, subtract_len)\\n{\\n  return Math.sqrt( Math.pow((dest_x - source_x), 2) + Math.pow((dest_y - source_y), 2)) - subtract_len;\\n}\\n\\n// return a string containing the points for a link polyline arrow pointing down, given its length\\nfunction linkPointsFromLen(len)\\n{\\n  var len_to_head = len - vis.link.head_len;\\n  var w1 = vis.link.width / 2;\\n  var w2 = vis.link.head_width / 2;\\n  return \\\"0 0, \\\" +\\n    w1 + \\\" 0, \\\" +\\n    w1 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    w2 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    \\\"0 \\\" + len + \\\", \\\" +\\n    -w2 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    -w1 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    -w1 + \\\" 0, 0 0\\\";\\n}\\n\\n// return the degrees by which a link needs to be rotated counterclockwise from pointing straight down in order to\\n// point in the right direction\\nfunction linkRotation(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n  var theta = Math.atan2((source.y - dest.y), (source.x - dest.x));\\n  return theta * 180 / Math.PI + 90;\\n}\\n\\n// return the outline color of a node\\nfunction nodeOutlineColor(n)\\n{\\n  if(n.identifiable)\\n  {\\n    return vis.node.outline_color_identifiable;\\n  }\\n  return vis.node.outline_color_unidentifiable;\\n}\\n\\n// return the fill color of a link\\nfunction linkFillColor(l)\\n{\\n  var n = nodeById(l.dest);\\n  if(n.all_data)\\n  {\\n    return vis.link.fill_color_all_data;\\n  }\\n  if(n.identifiable)\\n  {\\n    return vis.link.fill_color_identifiable;\\n  }\\n  return vis.link.fill_color_unidentifiable;\\n}\\n\\n// return the fill color of a link, given its destination id\\nfunction linkFillColorByDestId(id)\\n{\\n  var n = nodeById(id);\\n  if(n.all_data)\\n  {\\n    return vis.link.fill_color_all_data;\\n  }\\n  if(n.identifiable)\\n  {\\n    return vis.link.fill_color_identifiable;\\n  }\\n  return vis.link.fill_color_unidentifiable;\\n}\\n\\n// return the outline color of a link\\nfunction linkOutlineColor(l)\\n{\\n  if(nodeById(l.dest).identifiable)\\n  {\\n    return vis.link.outline_color_identifiable;\\n  }\\n  return vis.link.outline_color_unidentifiable;\\n}\\n\\n// return the outline color of a link, given its destination id\\nfunction linkOutlineColorByDestId(id)\\n{\\n  if(nodeById(id).identifiable)\\n  {\\n    return vis.link.outline_color_identifiable;\\n  }\\n  return vis.link.outline_color_unidentifiable;\\n}\\n\\n// return the fill color of a use type\\nfunction useTypeFillColor(t)\\n{\\n  if(t.all_data)\\n  {\\n    return vis.use_icon.fill_color_all_data;\\n  }\\n  else if(t.unknown)\\n  {\\n    return vis.use_icon.fill_color_unknown;\\n  }\\n  return vis.use_icon.fill_color_normal;\\n}\\n\\n// return the fill pattern of a node\\nfunction getNodePat(n)\\n{\\n  return n.identifiable ? \\\"url(#pat_\\\" + n.type + \\\"_identifiable)\\\"\\n                        : \\\"url(#pat_\\\" + n.type + \\\"_unidentifiable)\\\";\\n}\\n\\n// return the icon fill pattern of a link\\nfunction getLinkPat(l)\\n{\\n  return nodeById(l.dest).identifiable ? \\\"url(#pat_\\\" + l.type + \\\"_identifiable)\\\"\\n                                       : \\\"url(#pat_\\\" + l.type + \\\"_unidentifiable)\\\";\\n}\\n\\n// return the icon fill pattern of a use, given its type id\\nfunction getUsePatByTypeId(id)\\n{\\n  return \\\"url(#pat_\\\" + id + \\\")\\\";\\n}\\n\\n// return the fill pattern of an options icon\\nfunction getOptsPat()\\n{\\n  return \\\"url(#\\\" + OPTS_PAT_ID + \\\")\\\";\\n}\\n\\n// set up patterns to fill nodes, link icons, use icons, and other svg elements\\nfunction setUpPats()\\n{\\n  // node patterns\\n  var node_pats_identifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".node_pat_identifiable\\\")\\n    .data(node_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_identifiable\\\")\\n      .classed(\\\".node_pat_identifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  node_pats_identifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.node.fill_color_identifiable);\\n  node_pats_identifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_identifiable);\\n\\n  var node_pats_unidentifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".node_pat_unidentifiable\\\")\\n    .data(node_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_unidentifiable\\\")\\n      .classed(\\\".node_pat_unidentifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  node_pats_unidentifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.node.fill_color_unidentifiable);\\n  node_pats_unidentifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_unidentifiable);\\n\\n  // link patterns\\n  var link_pats_identifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".link_pat_identifiable\\\")\\n    .data(link_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_identifiable\\\")\\n      .classed(\\\".link_pat_identifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  link_pats_identifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.link.fill_color_identifiable);\\n  link_pats_identifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_identifiable);\\n\\n  var link_pats_unidentifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".link_pat_unidentifiable\\\")\\n    .data(link_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_unidentifiable\\\")\\n      .classed(\\\".link_pat_unidentifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  link_pats_unidentifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.link.fill_color_unidentifiable);\\n  link_pats_unidentifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_unidentifiable);\\n\\n  // use icon patterns\\n  var use_pats = svg_s.select(\\\"defs\\\").selectAll(\\\".use_pat\\\")\\n    .data(use_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id)\\n      .classed(\\\".use_pat\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  use_pats.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", useTypeFillColor);\\n  use_pats.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image);\\n\\n  // options icon pattern\\n  var opts_pat = svg_s.select(\\\"defs\\\").append(\\\"pattern\\\")\\n    .attr(\\\"id\\\", OPTS_PAT_ID)\\n    .attr(\\\"width\\\", \\\"1\\\")\\n    .attr(\\\"height\\\", \\\"1\\\")\\n    .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  opts_pat.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", vis.opts_node_icon.fill_color);\\n  opts_pat.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", vis.opts_icon.image);\\n}\\n\\n// helper function to recursively create a stick with the child at the bottom and num_ancestors ancestors\\nfunction makeStick(child, num_ancestors)\\n{\\n  return num_ancestors <= 0 ? child\\n                            : makeStick({ id: null, children: [child] }, num_ancestors - 1);\\n}\\n\\n// recursively create a tree, given the root\\nfunction makeTree(root)\\n{\\n  // make a copy of the root's successor links\\n  var successor_links = root.successor_links.slice();\\n\\n  // if there are no successor links, then return the root as a leaf\\n  if(successor_links.length === 0)\\n  {\\n    return { id: root.id, children: [], siblings: [] };\\n  }\\n  // else if there are successor links, then return the root's branch\\n  else\\n  {\\n    var children = [];\\n    var siblings = [];\\n\\n    // iterate through successor links\\n    for(let i = 0; i < successor_links.length; i++)\\n    {\\n      let s = nodeById(successor_links[i].successor_id);\\n      let s_branch = makeTree(s);\\n\\n      // if the successor is in a higher layer than the root, then add it as a child\\n      if(s.layer > root.layer)\\n        children.push(makeStick(s_branch, s.layer - root.layer - 1));\\n      // else if the successor is in the same layer as the root, then add it as a sibling\\n      else if(s.layer === root.layer)\\n        siblings.push(makeTree(s));\\n\\n      // add the successor's siblings as children of the root\\n      for(let j = 0; j < s_branch.siblings.length; j++)\\n      {\\n        children.push(makeStick(s_branch.siblings[j], s.layer - root.layer - 1));\\n      }\\n    }\\n\\n    // return a tree\\n    return { id: root.id, children: children, siblings: siblings };\\n  }\\n}\\n\\n// update the node panel based on a node\\nfunction updateNodePanel(n)\\n{\\n  // set color of panel based on whether data is identifiable or not\\n  var fill_color;\\n  var outline_color;\\n  if(n.identifiable)\\n  {\\n    fill_color = vis.node_panel.fill_color_identifiable;\\n    outline_color = vis.node_panel.outline_color_identifiable;\\n  }\\n  else\\n  {\\n    fill_color = vis.node_panel.fill_color_unidentifiable;\\n    outline_color = vis.node_panel.outline_color_unidentifiable;\\n  }\\n  node_panel_s\\n    .style(\\\"background-color\\\", fill_color)\\n    .style(\\\"border-color\\\", outline_color);\\n\\n\\n  // set basic panel text\\n  node_panel_s.select(\\\"h1\\\")\\n    .html(n.label);\\n  node_panel_s.select(\\\"p\\\")\\n    .html(n.text);\\n\\n  // set information about options regarding the node\\n  if(n.opts)\\n  {\\n    node_panel_opts_box_s.select(\\\"p\\\")\\n      .html(n.opts_text);\\n    node_panel_opts_box_s.style(\\\"display\\\", \\\"flex\\\");\\n  }\\n  else\\n  {\\n    node_panel_opts_box_s.style(\\\"display\\\", \\\"none\\\");\\n  }\\n\\n  // combine uses and links into one array of permitted actions that can be performed on data\\n  var actions = [];\\n  // list to prevent the same types of links from being displayed multiple times\\n  var track_links = [];\\n  // string to record the id of the all-data use if found, and null otherwise\\n  var use_all_data = null;\\n  for(let i = 0; i < n.uses.length; i++)\\n  {\\n    if(! useTypeById(n.uses[i]).all_data)\\n    {\\n      actions.push({type:n.uses[i], elt_type:element_types.USE});\\n    }\\n    else\\n    {\\n      use_all_data = n.uses[i];\\n    }\\n  }\\n  for(let i = 0; i < n.successor_links.length; i++)\\n  {\\n    let l = n.successor_links[i];\\n    if(! track_links.includes(l.type) && ! linkTypeById(l.type).all_data)\\n    {\\n      actions.push(l);\\n      actions[actions.length - 1].elt_type = element_types.LINK;\\n      track_links.push(l.type);\\n    }\\n  }\\n  if(use_all_data !== null)\\n  {\\n    actions.push({type:use_all_data, elt_type:element_types.USE});\\n  }\\n\\n  // if there are no actions to display, then hide the section\\n  if(actions.length === 0)\\n  {\\n    node_panel_actions_box_s\\n      .style(\\\"display\\\", \\\"none\\\");\\n  }\\n  // if there are actions to display, then display them\\n  else\\n  {\\n    node_panel_actions_box_s\\n      .style(\\\"display\\\", \\\"block\\\");\\n\\n    // update the heading\\n    node_panel_actions_box_s.select(\\\"h2\\\")\\n      .html(n.data_handler + \\\" can use this data to...\\\");\\n\\n    // remove existing action divs\\n    node_panel_actions_box_s.selectAll(\\\"div\\\").remove();\\n\\n    // add action divs to the panel\\n    var action_divs_s = node_panel_actions_box_s.selectAll(\\\"div\\\")\\n      .data(actions)\\n      .enter().append(\\\"div\\\")\\n        .classed(\\\"panel_list_item_box\\\", true)\\n        .style(\\\"border-bottom\\\", vis.node_panel.outline_width + \\\"px solid \\\" + outline_color);\\n\\n    // remove bottom border from last action div\\n    node_panel_actions_box_s.select(\\\"div:last-child\\\")\\n      .style(\\\"border-bottom\\\", \\\"none\\\");\\n\\n    // add icons and text to the action divs\\n    var icon_r_full = vis.use_icon.r + vis.use_icon.outline_width;\\n    var action_divs_svgs_s = action_divs_s.append(\\\"svg\\\")\\n      .attr(\\\"height\\\", icon_r_full * 2 + \\\"px\\\");\\n    var action_divs_use_svgs_s = action_divs_svgs_s.filter(d => d.elt_type === element_types.USE);\\n    var action_divs_link_svgs_s = action_divs_svgs_s.filter(d => d.elt_type === element_types.LINK);\\n\\n    action_divs_use_svgs_s\\n      .style(\\\"width\\\", (icon_r_full * 2) + \\\"px\\\");\\n    action_divs_link_svgs_s\\n      .style(\\\"width\\\", (icon_r_full * 5 + vis.link.outline_width) + \\\"px\\\");\\n\\n    action_divs_use_svgs_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.use_icon.r)\\n      .attr(\\\"cx\\\", icon_r_full)\\n      .attr(\\\"cy\\\", icon_r_full)\\n      .attr(\\\"fill\\\", d => getUsePatByTypeId(d.type))\\n      .attr(\\\"stroke\\\", vis.use_icon.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.use_icon.outline_width);\\n    action_divs_link_svgs_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.use_icon.r)\\n      .attr(\\\"cx\\\", 4 * icon_r_full + vis.link.outline_width)\\n      .attr(\\\"cy\\\", icon_r_full)\\n      .attr(\\\"fill\\\", d => getNodePat(nodeById(d.successor_id)))\\n      .attr(\\\"stroke\\\", d => nodeOutlineColor(nodeById(d.successor_id)))\\n      .attr(\\\"stroke-width\\\", vis.use_icon.outline_width);\\n\\n    action_divs_link_svgs_s.append(\\\"polyline\\\")\\n      .attr(\\\"transform\\\", \\\"translate(\\\" + vis.link.outline_width + \\\",\\\" + icon_r_full + \\\") rotate(270)\\\")\\n      .attr(\\\"points\\\", linkPointsFromLen(linkLen(0, icon_r_full, 4 * icon_r_full, icon_r_full,\\n        icon_r_full + vis.link.head_to_node_dist)))\\n      .attr(\\\"fill\\\", d => linkFillColorByDestId(d.successor_id))\\n      .attr(\\\"stroke\\\", d => linkOutlineColorByDestId(d.successor_id))\\n      .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n\\n    // add icons for special types of links\\n    action_divs_link_svgs_s.filter(d => linkTypeById(d.type).display_on_link).append(\\\"circle\\\")\\n      .attr(\\\"transform\\\", function(d)\\n      {\\n        let len_to_head = linkLen(0, icon_r_full, 4 * icon_r_full, icon_r_full,\\n          icon_r_full + vis.link.head_to_node_dist) - vis.link.head_len;\\n        return \\\"translate(\\\" + (len_to_head/2 + vis.link.outline_width) + \\\",\\\" + icon_r_full + \\\")\\\";\\n      })\\n      .attr(\\\"r\\\", vis.link_icon_on_link.r)\\n      .attr(\\\"fill\\\", d => getLinkPat(linkById(n.id + \\\"->\\\" + d.successor_id)))\\n      .attr(\\\"stroke\\\", d => linkOutlineColorByDestId(d.successor_id))\\n      .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n    action_divs_s.filter(d => d.elt_type === element_types.USE).append(\\\"p\\\")\\n      .html(d => useTypeById(d.type).description);\\n    action_divs_s.filter(d => d.elt_type === element_types.LINK).append(\\\"p\\\")\\n      .html(d => linkTypeById(d.type).description);\\n  }\\n\\n  // show the panel\\n  node_panel_box_s\\n    .style(\\\"display\\\", \\\"inline-block\\\");\\n}\\n\\n// update the link panel based on a link\\nfunction updateLinkPanel(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n\\n  // set color of panel based on whether data of destination node is identifiable or not\\n  var fill_color;\\n  var outline_color;\\n  if(dest.identifiable)\\n  {\\n    fill_color = vis.link_panel.fill_color_identifiable;\\n    outline_color = vis.link_panel.outline_color_identifiable;\\n  }\\n  else\\n  {\\n    fill_color = vis.link_panel.fill_color_unidentifiable;\\n    outline_color = vis.link_panel.outline_color_unidentifiable;\\n  }\\n  link_panel_s\\n    .style(\\\"background-color\\\", fill_color)\\n    .style(\\\"border-color\\\", outline_color);\\n\\n  var node_r_full = vis.node.r + vis.node.outline_width;\\n\\n  // update the link graphic\\n  link_panel_graphic_s.select(\\\"polyline\\\")\\n      .attr(\\\"points\\\", linkPointsFromLen(linkLen(node_r_full, node_r_full,\\n        vis.link_panel_graphic.dist_between_nodes + node_r_full, node_r_full,\\n        node_r_full + vis.link.head_to_node_dist)))\\n      .attr(\\\"fill\\\", linkFillColor(l))\\n      .attr(\\\"stroke\\\", linkOutlineColor(l))\\n      .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n  link_panel_graphic_s.select(\\\"circle\\\")\\n      .attr(\\\"fill\\\", getNodePat(source))\\n      .attr(\\\"stroke\\\", nodeOutlineColor(source));\\n  link_panel_graphic_s.select(\\\"circle:nth-child(3)\\\")\\n      .attr(\\\"fill\\\", getNodePat(dest))\\n      .attr(\\\"stroke\\\", nodeOutlineColor(dest));\\n\\n  // set the icon and title for the link panel\\n  link_panel_s.select(\\\"circle\\\")\\n    .attr(\\\"fill\\\", getLinkPat(l))\\n    .attr(\\\"stroke\\\", linkOutlineColor(l));\\n  link_panel_s.select(\\\"h1\\\")\\n    .html(linkTypeById(l.type).label);\\n  link_panel_s.select(\\\"p\\\")\\n    .html(l.text);\\n\\n  // show the panel\\n  link_panel_box_s\\n    .style(\\\"display\\\", \\\"inline-block\\\");\\n}\\n\\n// update either the node or the link panel, based on an input selection\\nfunction updatePanel(s)\\n{\\n  if(s.classed(\\\"node\\\"))\\n  {\\n    updateNodePanel(s.datum());\\n  }\\n  else\\n  {\\n    updateLinkPanel(s.datum());\\n  }\\n}\\n\\n// hide the panels\\nfunction hidePanels()\\n{\\n  node_panel_box_s\\n    .style(\\\"display\\\", \\\"none\\\");\\n  link_panel_box_s\\n    .style(\\\"display\\\", \\\"none\\\");\\n}\\n\\n// change a node or link selection's outline color and outline width\\nfunction changeSelectionOutline(s, outline_color, outline_width)\\n{\\n  s.selectAll(\\\"*\\\")\\n    .interrupt()\\n    .transition();\\n  s.selectAll(\\\"*\\\")\\n    .attr(\\\"stroke\\\", outline_color)\\n    .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// transition a node selection's radius, outline color, and outline width\\nfunction transitionNodeSelection(s, r, outline_color, outline_width)\\n{\\n  s.select(\\\"*\\\")\\n    .transition()\\n      .attr(\\\"r\\\", r)\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n  s.select(\\\"*:nth-child(2)\\\")\\n    .transition()\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// transition a link selection's outline color and outline width\\nfunction transitionLinkSelection(s, outline_color, outline_width)\\n{\\n  s.selectAll(\\\"*\\\")\\n    .transition()\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// find a node's connected elements' ids\\nfunction findNodeConnectedEltIds(n)\\n{\\n  var connected_ids = [];\\n\\n  // if n is the central node, then add all-data successors and their descendants, as well as primary nodes\\n  if(n.layer === 0)\\n  {\\n    for(let i = 0; i < n.successor_links.length; i++)\\n    {\\n      let s = nodeById(n.successor_links[i].successor_id);\\n\\n      if(s.all_data)\\n      {\\n        connected_ids.push(n.id + \\\"->\\\" + s.id);\\n        connected_ids.push(s.id);\\n        connected_ids = connected_ids.concat(findNodeConnectedEltIds(s));\\n      }\\n    }\\n\\n    connected_ids = connected_ids.concat(primary_nodes.map(n => n.id));\\n  }\\n  // if n is not the central node, add successors and their descendants\\n  else\\n  {\\n    for(let i = 0; i < n.successor_links.length; i++)\\n    {\\n      let s = nodeById(n.successor_links[i].successor_id);\\n\\n      connected_ids.push(n.id + \\\"->\\\" + s.id);\\n      connected_ids.push(s.id);\\n      connected_ids = connected_ids.concat(findNodeConnectedEltIds(s));\\n    }\\n  }\\n\\n  // if n is a primary node, add the central node\\n  if(n.primary)\\n  {\\n    connected_ids.push(central_node.id);\\n  }\\n\\n  return connected_ids;\\n}\\n\\n// find a link's connected elements' ids\\nfunction findLinkConnectedEltIds(l)\\n{\\n  var connected_ids = findNodeConnectedEltIds(nodeById(l.dest));\\n  connected_ids.push(l.dest);\\n  return connected_ids;\\n}\\n\\n// handle interactions when the cursor enters an interactive element\\nfunction onMouseEnter(s)\\n{\\n  // display the correct panel\\n  hidePanels();\\n  updatePanel(s);\\n\\n  // find elements connected to the hovered element\\n  hovered_elt_connected_elts_ids = s.classed(\\\"node\\\") ? findNodeConnectedEltIds(s.datum())\\n                                                     : findLinkConnectedEltIds(s.datum());\\n\\n  // if the hovered element is not the saved element\\n  if(saved_elt_s === null || s.datum().id !== saved_elt_s.datum().id)\\n  {\\n    // change the appearance of the hovered element to indicate focus\\n    if(s.classed(\\\"node\\\"))\\n    {\\n      transitionNodeSelection(s, s.datum().r * (s.datum().layer === 0 ? 1.05 : 1.3), vis.node.outline_color_focus,\\n        vis.node.outline_width_focus);\\n    }\\n    else\\n    {\\n      transitionLinkSelection(s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n    }\\n  }\\n\\n  // change the appearance of connected elements that are not the saved element to indicate focus\\n  let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n    (saved_elt_s === null || d.id !== saved_elt_s.datum().id));\\n  let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n    (saved_elt_s === null || d.id !== saved_elt_s.datum().id));\\n  transitionNodeSelection(connected_nodes_s, d => d.r * (d.layer === 0 ? 1.02 : 1.1),\\n    vis.node.outline_color_focus, vis.node.outline_width_focus);\\n  transitionLinkSelection(connected_links_s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n}\\n\\n// handle interactions when the cursor leaves an interactive element\\nfunction onMouseLeave(s)\\n{\\n  // hide the panel\\n  hidePanels();\\n\\n  // if there is no saved element\\n  if(saved_elt_s === null)\\n  {\\n    // change the appearance of the node back to normal\\n    if(s.classed(\\\"node\\\"))\\n    {\\n      transitionNodeSelection(s, s.datum().r, nodeOutlineColor(s.datum()), vis.node.outline_width);\\n    }\\n    else\\n    {\\n      transitionLinkSelection(s, linkOutlineColor(s.datum()), vis.link.outline_width);\\n    }\\n\\n    // change the appearance of connected elements back to normal\\n    let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id));\\n    let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id));\\n    transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n    transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n  }\\n  // if there is a saved element\\n  else\\n  {\\n    // update the panel to display information about the saved element\\n    updatePanel(saved_elt_s);\\n\\n    // if the cursor was over the saved element\\n    if(s.datum().id !== saved_elt_s.datum().id)\\n    {\\n      // if the element was connected to the saved element, then change its appearance to indicate focus\\n      if(saved_elt_connected_elts_ids.includes(s.datum().id))\\n      {\\n        if(s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(s, s.datum().r * (s.datum().layer === 0 ? 1.02 : 1.1),\\n            vis.node.outline_color_focus, vis.node.outline_width_focus);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n        }\\n      }\\n      // else, change its appearance back to normal\\n      else\\n      {\\n        if(s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(s, s.datum().r, nodeOutlineColor(s.datum()), vis.node.outline_width);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(s, linkOutlineColor(s.datum()), vis.link.outline_width);\\n        }\\n      }\\n\\n      // change appearance of connected elements that are not the saved element or its connected elements back to\\n      // normal\\n      let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n        saved_elt_s.datum().id !== d.id && ! saved_elt_connected_elts_ids.includes(d.id));\\n      let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n        saved_elt_s.datum().id !== d.id && ! saved_elt_connected_elts_ids.includes(d.id));\\n      transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n      transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n    }\\n  }\\n\\n  // clear the array of the hovered element's connected nodes\\n  hovered_elt_connected_elts_ids = null;\\n}\\n\\n// handle interactions when the cursor clicks on an interactive element\\nfunction onClick(s)\\n{\\n  // if the new clicked element is the saved element, then unsave it\\n  if(saved_elt_s !== null && s.datum().id === saved_elt_s.datum().id)\\n  {\\n    // change outline of clicked element back to normal\\n    changeSelectionOutline(s, s.classed(\\\"node\\\") ? vis.node.outline_color_focus : vis.link.outline_color_focus,\\n      s.classed(\\\"node\\\") ? vis.node.outline_width_focus : vis.link.outline_width_focus);\\n\\n    // clear the saved element and its array of connected nodes\\n    saved_elt_s = null;\\n    saved_elt_connected_elts_ids = [];\\n  }\\n  // if the new clicked element is not the saved element, then save it\\n  else\\n  {\\n    // set nodes connected to the new clicked element\\n    let new_clicked_elt_connected_nodes_ids = hovered_elt_connected_elts_ids;\\n\\n    // if there is an old saved element, then unsave it\\n    if(saved_elt_s !== null)\\n    {\\n      // if the saved element is connected to the new clicked element, then change its appearance to indicate focus\\n      if(new_clicked_elt_connected_nodes_ids.includes(saved_elt_s.datum().id))\\n      {\\n        if(saved_elt_s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(saved_elt_s, saved_elt_s.datum().r * (saved_elt_s.datum().layer === 0 ? 1.02 : 1.1),\\n            vis.node.outline_color_focus, vis.node.outline_width_focus);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(saved_elt_s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n        }\\n      }\\n      // else, change its appearance back to normal\\n      else\\n      {\\n        if(saved_elt_s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(saved_elt_s, saved_elt_s.datum().r, nodeOutlineColor(saved_elt_s.datum()),\\n            vis.node.outline_width);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(saved_elt_s, linkOutlineColor(saved_elt_s.datum()), vis.link.outline_width);\\n        }\\n      }\\n\\n      // change the appearance of connected elements of the old saved element that are not the new clicked element\\n      // or its connected elements back to normal\\n      let connected_nodes_s = nodes_s.filter(d => saved_elt_connected_elts_ids.includes(d.id) &&\\n        d.id !== s.datum().id && ! new_clicked_elt_connected_nodes_ids.includes(d.id));\\n      let connected_links_s = links_s.filter(d => saved_elt_connected_elts_ids.includes(d.id) &&\\n        d.id !== s.datum().id && ! new_clicked_elt_connected_nodes_ids.includes(d.id));\\n      transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n      transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n    }\\n\\n    // change outline of new clicked element to indicate focus\\n    changeSelectionOutline(s, s.classed(\\\"node\\\") ? vis.node.outline_color_saved : vis.link.outline_color_saved,\\n      s.classed(\\\"node\\\") ? vis.node.outline_width_saved : vis.link.outline_width_saved);\\n\\n    // update the saved element and its array of connected nodes\\n    saved_elt_s = s;\\n    saved_elt_connected_elts_ids = new_clicked_elt_connected_nodes_ids;\\n  }\\n}\\n\\n\\n\\nfunction main()\\n{\\n  // set title and intro text\\n  d3.select(\\\"h1\\\").html(pol.title);\\n  d3.select(\\\"p\\\").html(pol.intro);\\n\\n  // set up patterns for background fills\\n  setUpPats();\\n\\n  // set display variables and elements\\n  {\\n    let display_r = vis.display.r;\\n\\n    let node_r_full = vis.node.r + vis.node.outline_width;\\n    let link_icon_r_full = vis.link_icon.r + vis.link_icon.outline_width;\\n    let opts_panel_icon_r_full = vis.opts_panel_icon.r + vis.opts_panel_icon.outline_width;\\n\\n    let node_panel_extra_space = 2 * (vis.node_panel.padding + vis.node_panel.outline_width);\\n    let node_panel_max_height = 2 * display_r - node_panel_extra_space;\\n\\n    let link_panel_graphic_height = 2 * node_r_full;\\n    let link_panel_extra_space = 2 * (vis.link_panel.padding + vis.link_panel.outline_width);\\n    let link_panel_max_height = 2 * display_r - link_panel_extra_space - link_panel_graphic_height -\\n      vis.link_panel_graphic.margin_bottom;\\n\\n    bg_circles_rs = vis.bg_circle.r_proportions.map(function(x) { return x * display_r; });\\n    svg_s\\n      .attr(\\\"width\\\", 2 * display_r)\\n      .attr(\\\"height\\\", 2 * display_r);\\n    g_s.attr(\\\"transform\\\", \\\"translate(\\\" + display_r + \\\",\\\" + display_r + \\\")\\\");\\n\\n    node_panel_s\\n      .style(\\\"border\\\", vis.node_panel.outline_width + \\\"px solid\\\")\\n      .style(\\\"width\\\", vis.node_panel.width + \\\"px\\\")\\n      .style(\\\"max-height\\\", node_panel_max_height + \\\"px\\\")\\n      .style(\\\"padding\\\", vis.node_panel.padding + \\\"px\\\");\\n\\n    node_panel_opts_box_s.select(\\\"svg\\\")\\n      .attr(\\\"width\\\", 2 * opts_panel_icon_r_full)\\n      .attr(\\\"height\\\", 2 * opts_panel_icon_r_full);\\n    node_panel_opts_box_s.select(\\\"h2\\\")\\n      .html(\\\"You have some control over this data.\\\");\\n    node_panel_opts_box_s.select(\\\"circle\\\")\\n      .attr(\\\"cx\\\", opts_panel_icon_r_full)\\n      .attr(\\\"cy\\\", opts_panel_icon_r_full)\\n      .attr(\\\"r\\\", vis.opts_panel_icon.r)\\n      .attr(\\\"fill\\\", getOptsPat())\\n      .attr(\\\"stroke\\\", vis.opts_panel_icon.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.opts_panel_icon.outline_width);\\n\\n    link_panel_s\\n      .style(\\\"border\\\", vis.link_panel.outline_width + \\\"px solid\\\")\\n      .style(\\\"width\\\", vis.link_panel.width + \\\"px\\\")\\n      .style(\\\"max-height\\\", link_panel_max_height + \\\"px\\\")\\n      .style(\\\"padding\\\", vis.link_panel.padding + \\\"px\\\");\\n\\n    link_panel_graphic_s\\n      .attr(\\\"width\\\", (vis.link_panel_graphic.dist_between_nodes + 2 * node_r_full) + \\\"px\\\")\\n      .attr(\\\"height\\\", link_panel_graphic_height)\\n      .style(\\\"margin-bottom\\\", vis.link_panel_graphic.margin_bottom);\\n    link_panel_graphic_s.select(\\\"polyline\\\")\\n      .attr(\\\"transform\\\", \\\"translate(\\\" + node_r_full + \\\",\\\" + node_r_full + \\\") rotate(270)\\\")\\n      .attr(\\\"stroke-width\\\", 0);\\n    link_panel_graphic_s.select(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.node.r)\\n      .attr(\\\"cx\\\", node_r_full)\\n      .attr(\\\"cy\\\", node_r_full)\\n      .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n    link_panel_graphic_s.select(\\\"circle:nth-child(3)\\\")\\n      .attr(\\\"r\\\", vis.node.r)\\n      .attr(\\\"cx\\\", vis.link_panel_graphic.dist_between_nodes + node_r_full)\\n      .attr(\\\"cy\\\", node_r_full)\\n      .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n\\n    link_panel_s.select(\\\"svg\\\")\\n      .attr(\\\"width\\\", 2 * link_icon_r_full)\\n      .attr(\\\"height\\\", 2 * link_icon_r_full)\\n      .select(\\\"circle\\\")\\n        .attr(\\\"r\\\", vis.link_icon.r)\\n        .attr(\\\"cx\\\", link_icon_r_full)\\n        .attr(\\\"cy\\\", link_icon_r_full)\\n        .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n    tree\\n      .size([(2 - vis.layer_title.space_in_pi_radians) * Math.PI, display_r])\\n      .separation(function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth; });\\n  }\\n\\n\\n\\n  // iterate through nodes to record special nodes, change node layers to essentially create a second sub-layer in\\n  // layer 1, and create links and background links\\n  for(let i = 0; i < nodes.length; i++)\\n  {\\n    let n = nodes[i];\\n\\n    // if the node is the central node, record it, and add its successor links in layer 1 to the array of primary nodes\\n    if(n.layer === 0)\\n    {\\n      central_node = n;\\n      for(let j = 0; j < n.successor_links.length; j++)\\n      {\\n        let s = nodeById(n.successor_links[j].successor_id);\\n        if(s.layer === 1 && ! s.all_data)\\n        {\\n          primary_nodes.push(s);\\n          s.primary = true;\\n        }\\n        else\\n        {\\n          s.primary = false;\\n        }\\n      }\\n    }\\n\\n    // set the radius of the node\\n    n.r = nodeRadius(n);\\n\\n    // fill links array with link objects based on the .json data\\n    for(let j = 0; j < n.successor_links.length; j++)\\n    {\\n      let l = n.successor_links[j];\\n      links.push({ id: n.id + \\\"->\\\" + l.successor_id, source: n.id, dest: l.successor_id, type: l.type,\\n        text: l.text });\\n    }\\n\\n    // move the node one node outward to accommodate for second sub-layer within layer 1 (center node and primary\\n    // nodes will later be moved back)\\n    n.layer += 1;\\n  }\\n\\n  // move central node and primary nodes back to their original layer\\n  central_node.layer -= 1;\\n  primary_nodes.map(n => n.layer -= 1);\\n\\n\\n\\n  // map nodes and create a d3 tree\\n  root = tree(d3.hierarchy(makeTree(central_node)));\\n  let tree_nodes = root.descendants();\\n\\n  // set the coordinates of nodes to the coordinates of nodes in the tree, altered to make a radial tree\\n  for(let i = 0; i < nodes.length; i++)\\n  {\\n    let n = nodes[i];\\n    let offset = vis.layer_title.space_in_pi_radians / 2 * Math.PI;\\n    let tree_n = tree_nodes.find(function(node) { return node.data.id === n.id; });\\n    n.x = (tree_n.y = +tree_n.y) * Math.cos((tree_n.x -= Math.PI / 2) + offset);\\n    n.y = tree_n.y * Math.sin(tree_n.x + offset);\\n\\n    // adjust the distance of nodes from the center, according to specified dimensions\\n    if(n.layer !== 0)\\n    {\\n      n.x = n.x * vis.node.dist_from_center_proportions[n.layer] / (n.layer / NUM_LAYERS);\\n      n.y = n.y * vis.node.dist_from_center_proportions[n.layer] / (n.layer / NUM_LAYERS);\\n    }\\n  }\\n\\n\\n\\n  // append background circles for layers\\n  for(let i = NUM_LAYERS - 1; i > 0; i--)\\n  {\\n    let r = bg_circles_rs[i];\\n\\n    g_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", r)\\n      .attr(\\\"fill\\\", vis.bg_circle.fill_color)\\n      .attr(\\\"stroke\\\", vis.bg_circle.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.bg_circle.outline_width);\\n\\n    let r_for_text = r - vis.layer_title.font_size - vis.layer_title.dist_from_edge;\\n    let text = i === 2 ? \\\"Third parties\\\" : pol.provider_name;\\n\\n    g_s.append(\\\"path\\\")\\n      .attr(\\\"id\\\", \\\"text_layer_\\\" + i)\\n      .attr(\\\"d\\\", \\\"M-\\\" + r_for_text + \\\",0 a\\\" + r_for_text + \\\",\\\" + r_for_text + \\\" 0 0 1 \\\" + (2 * r_for_text) + \\\",0\\\")\\n      .attr(\\\"fill\\\", \\\"none\\\");\\n    g_s.append(\\\"text\\\")\\n      .classed(\\\"layer_title\\\", true)\\n      .attr(\\\"text-anchor\\\", \\\"middle\\\")\\n      .style(\\\"font-size\\\", vis.layer_title.font_size + \\\"px\\\")\\n      .style(\\\"fill\\\", vis.layer_title.color)\\n      .append(\\\"textPath\\\")\\n        .html(text)\\n        .attr(\\\"xlink:href\\\", \\\"#text_layer_\\\" + i)\\n        .attr(\\\"startOffset\\\", \\\"50%\\\");\\n  }\\n\\n\\n\\n  // append links\\n  links_s = g_s.append(\\\"g\\\").selectAll(\\\".link\\\")\\n    .data(links)\\n    .enter().append(\\\"g\\\")\\n      .classed(\\\"link\\\", true)\\n      .attr(\\\"transform\\\", function(d)\\n      {\\n        let source = nodeById(d.source);\\n        return \\\"translate(\\\" + source.x + \\\",\\\" + source.y + \\\") rotate(\\\" + linkRotation(d) + \\\")\\\";\\n      });\\n\\n  // add lines to links\\n  links_s.filter(d => ! linkTypeById(d.type).all_data).append(\\\"polyline\\\")\\n    .attr(\\\"points\\\", linkArrowPoints)\\n    .attr(\\\"fill\\\", linkFillColor)\\n    .attr(\\\"stroke\\\", linkOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n\\n  // add icons for special types of links\\n  links_s.filter(d => linkTypeById(d.type).display_on_link).append(\\\"circle\\\")\\n    .attr(\\\"transform\\\", function(d)\\n    {\\n      let source = nodeById(d.source);\\n      let dest = nodeById(d.dest);\\n      let len_to_head = linkLen(source.x, source.y, dest.x, dest.y, dest.r + vis.node.outline_width +\\n        vis.link.head_to_node_dist) - vis.link.head_len;\\n      let displacement = (len_to_head + source.r) / 2;\\n      return \\\"translate(0,\\\" + displacement + \\\") rotate(\\\" + (-linkRotation(d)) + \\\")\\\";\\n    })\\n    .attr(\\\"r\\\", vis.link_icon_on_link.r)\\n    .attr(\\\"fill\\\", getLinkPat)\\n    .attr(\\\"stroke\\\", linkOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n  // mouse interactions for links\\n  links_s\\n    // display more information when the cursor hovers over links\\n    .on(\\\"mouseenter\\\", function(d)\\n    {\\n      onMouseEnter(d3.select(this));\\n      d3.select(this).raise();\\n    })\\n    // hide information when the cursor leaves a link\\n    .on(\\\"mouseleave\\\", function(d) { onMouseLeave(d3.select(this)); })\\n    // retain focus on an element when it is clicked\\n    .on(\\\"click\\\", function(d) { onClick(d3.select(this)); });\\n\\n\\n\\n  // append nodes\\n  nodes_s = g_s.append(\\\"g\\\").selectAll(\\\".node\\\")\\n    .data(nodes)\\n    .enter().append(\\\"g\\\")\\n      .classed(\\\"node\\\", true)\\n      .attr(\\\"transform\\\", d => \\\"translate(\\\" + d.x + \\\",\\\" + d.y + \\\")\\\");\\n\\n  // add circles to nodes\\n  nodes_s.append(\\\"circle\\\")\\n    .attr(\\\"r\\\", nodeRadius)\\n    .attr(\\\"fill\\\", getNodePat)\\n    .attr(\\\"stroke\\\", nodeOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n\\n  // add options icon to nodes that contain options\\n  nodes_s.filter(d => d.opts === true).append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", vis.opts_node_icon.cx)\\n    .attr(\\\"cy\\\", vis.opts_node_icon.cy)\\n    .attr(\\\"r\\\", vis.opts_node_icon.r)\\n    .attr(\\\"fill\\\", getOptsPat())\\n    .attr(\\\"stroke\\\", vis.opts_node_icon.outline_color)\\n    .attr(\\\"stroke-width\\\", vis.opts_node_icon.outline_width);\\n\\n  // mouse interactions for nodes\\n  nodes_s\\n    // display more information in the node panel when the cursor hovers over nodes\\n    .on(\\\"mouseenter\\\", function(d)\\n    {\\n      onMouseEnter(d3.select(this));\\n      if(d.layer !== 0)\\n      {\\n        d3.select(this).raise();\\n      }\\n    })\\n    // update the node panel when the cursor leaves a node\\n    .on(\\\"mouseleave\\\", function(d) { onMouseLeave(d3.select(this)); })\\n    // retain focus on an element when it is clicked\\n    .on(\\\"click\\\", function(d) { onClick(d3.select(this)); });\\n\\n\\n\\n  // mouse interactions for panel close buttons\\n  panel_close_btns_s\\n    .on(\\\"click\\\", function(d)\\n    {\\n      let s = saved_elt_s;\\n      onMouseEnter(s);\\n      onClick(s);\\n      onMouseLeave(s);\\n    });\\n}\\n\\n\\n\\n// load data from .json files\\nvar url = new URL(document.URL);\\nvar p = url.searchParams.get(\\\"policy\\\");\\nvar v = url.searchParams.get(\\\"visual\\\");\\nif(v === null)\\n{\\n  v = \\\"default.json\\\";\\n}\\n\\nd3.json(\\\"data/policies/\\\" + p).then(function(policy_json)\\n{\\n  d3.json(\\\"data/visual_customizations/\\\" + v).then(function(visual_json)\\n  {\\n    // copy data from .json files\\n    pol = policy_json;\\n    vis = visual_json;\\n\\n    nodes = pol.nodes;\\n    node_types = pol.node_types;\\n    link_types = pol.link_types;\\n    use_types = pol.use_types;\\n\\n    main();\\n  });\\n});\\n\"]}","code":"!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e,n){\"use strict\";n.r(e),function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}();var i,r,l,o,a,d,c,u,s,_,f={NODE:\"node\",LINK:\"link\",USE:\"use\"},p=3,h=\"pat_opts\",y=[],k=null,w=[],m=[],b=!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\"#canvas\"),v=b.append(\"g\"),g=!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\"#node_panel_box\"),x=!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\"#link_panel_box\"),O=g.select(\"#node_panel\"),U=x.select(\"#link_panel\"),E=O.select(\"#node_panel_opts_box\"),N=O.select(\"#node_panel_actions_box\"),D=x.select(\"#link_panel_graphic\"),M=!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\".close_btn\"),C=!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(),L=[];function T(t){return l.find(function(e){return e.id===t})}function F(t){return a.find(function(e){return e.id===t})}function j(t){return d.find(function(e){return e.id===t})}function A(t){return 0===t.layer?r.display.r*r.node.dist_from_center_proportions[1]:r.node.r}function B(t){var e=T(t.source),n=T(t.dest);return S(P(e.x,e.y,n.x,n.y,n.r+r.node.outline_width+r.link.head_to_node_dist))}function P(t,e,n,i,r){return Math.sqrt(Math.pow(n-t,2)+Math.pow(i-e,2))-r}function S(t){var e=t-r.link.head_len,n=r.link.width/2,i=r.link.head_width/2;return\"0 0, \"+n+\" 0, \"+n+\" \"+e+\", \"+i+\" \"+e+\", 0 \"+t+\", \"+-i+\" \"+e+\", \"+-n+\" \"+e+\", \"+-n+\" 0, 0 0\"}function I(t){var e=T(t.source),n=T(t.dest);return 180*Math.atan2(e.y-n.y,e.x-n.x)/Math.PI+90}function z(t){return t.identifiable?r.node.outline_color_identifiable:r.node.outline_color_unidentifiable}function K(t){var e=T(t.dest);return e.all_data?r.link.fill_color_all_data:e.identifiable?r.link.fill_color_identifiable:r.link.fill_color_unidentifiable}function R(t){return T(t.dest).identifiable?r.link.outline_color_identifiable:r.link.outline_color_unidentifiable}function q(t){return T(t).identifiable?r.link.outline_color_identifiable:r.link.outline_color_unidentifiable}function Y(t){return t.all_data?r.use_icon.fill_color_all_data:t.unknown?r.use_icon.fill_color_unknown:r.use_icon.fill_color_normal}function G(t){return t.identifiable?\"url(#pat_\"+t.type+\"_identifiable)\":\"url(#pat_\"+t.type+\"_unidentifiable)\"}function H(t){return T(t.dest).identifiable?\"url(#pat_\"+t.type+\"_identifiable)\":\"url(#pat_\"+t.type+\"_unidentifiable)\"}function J(){return\"url(#\"+h+\")\"}function Q(t,e){return e<=0?t:Q({id:null,children:[t]},e-1)}function V(t){var e,n;t.identifiable?(e=r.node_panel.fill_color_identifiable,n=r.node_panel.outline_color_identifiable):(e=r.node_panel.fill_color_unidentifiable,n=r.node_panel.outline_color_unidentifiable),O.style(\"background-color\",e).style(\"border-color\",n),O.select(\"h1\").html(t.label),O.select(\"p\").html(t.text),t.opts?(E.select(\"p\").html(t.opts_text),E.style(\"display\",\"flex\")):E.style(\"display\",\"none\");for(var i=[],l=[],o=null,a=0;a<t.uses.length;a++)j(t.uses[a]).all_data?o=t.uses[a]:i.push({type:t.uses[a],elt_type:f.USE});for(var d=0;d<t.successor_links.length;d++){var c=t.successor_links[d];l.includes(c.type)||F(c.type).all_data||(i.push(c),i[i.length-1].elt_type=f.LINK,l.push(c.type))}if(null!==o&&i.push({type:o,elt_type:f.USE}),0===i.length)N.style(\"display\",\"none\");else{N.style(\"display\",\"block\"),N.select(\"h2\").html(t.data_handler+\" can use this data to...\"),N.selectAll(\"div\").remove();var u=N.selectAll(\"div\").data(i).enter().append(\"div\").classed(\"panel_list_item_box\",!0).style(\"border-bottom\",r.node_panel.outline_width+\"px solid \"+n);N.select(\"div:last-child\").style(\"border-bottom\",\"none\");var s=r.use_icon.r+r.use_icon.outline_width,_=u.append(\"svg\").attr(\"height\",2*s+\"px\"),p=_.filter(function(t){return t.elt_type===f.USE}),h=_.filter(function(t){return t.elt_type===f.LINK});p.style(\"width\",2*s+\"px\"),h.style(\"width\",5*s+r.link.outline_width+\"px\"),p.append(\"circle\").attr(\"r\",r.use_icon.r).attr(\"cx\",s).attr(\"cy\",s).attr(\"fill\",function(t){return\"url(#pat_\"+t.type+\")\"}).attr(\"stroke\",r.use_icon.outline_color).attr(\"stroke-width\",r.use_icon.outline_width),h.append(\"circle\").attr(\"r\",r.use_icon.r).attr(\"cx\",4*s+r.link.outline_width).attr(\"cy\",s).attr(\"fill\",function(t){return G(T(t.successor_id))}).attr(\"stroke\",function(t){return z(T(t.successor_id))}).attr(\"stroke-width\",r.use_icon.outline_width),h.append(\"polyline\").attr(\"transform\",\"translate(\"+r.link.outline_width+\",\"+s+\") rotate(270)\").attr(\"points\",S(P(0,s,4*s,s,s+r.link.head_to_node_dist))).attr(\"fill\",function(t){return function(t){var e=T(t);return e.all_data?r.link.fill_color_all_data:e.identifiable?r.link.fill_color_identifiable:r.link.fill_color_unidentifiable}(t.successor_id)}).attr(\"stroke\",function(t){return q(t.successor_id)}).attr(\"stroke-width\",r.link.outline_width),h.filter(function(t){return F(t.type).display_on_link}).append(\"circle\").attr(\"transform\",function(t){return\"translate(\"+((P(0,s,4*s,s,s+r.link.head_to_node_dist)-r.link.head_len)/2+r.link.outline_width)+\",\"+s+\")\"}).attr(\"r\",r.link_icon_on_link.r).attr(\"fill\",function(e){return H((n=t.id+\"->\"+e.successor_id,y.find(function(t){return t.id===n})));var n}).attr(\"stroke\",function(t){return q(t.successor_id)}).attr(\"stroke-width\",r.link_icon.outline_width),u.filter(function(t){return t.elt_type===f.USE}).append(\"p\").html(function(t){return j(t.type).description}),u.filter(function(t){return t.elt_type===f.LINK}).append(\"p\").html(function(t){return F(t.type).description})}g.style(\"display\",\"inline-block\")}function W(t){t.classed(\"node\")?V(t.datum()):function(t){var e,n,i=T(t.source),l=T(t.dest);l.identifiable?(e=r.link_panel.fill_color_identifiable,n=r.link_panel.outline_color_identifiable):(e=r.link_panel.fill_color_unidentifiable,n=r.link_panel.outline_color_unidentifiable),U.style(\"background-color\",e).style(\"border-color\",n);var o=r.node.r+r.node.outline_width;D.select(\"polyline\").attr(\"points\",S(P(o,o,r.link_panel_graphic.dist_between_nodes+o,o,o+r.link.head_to_node_dist))).attr(\"fill\",K(t)).attr(\"stroke\",R(t)).attr(\"stroke-width\",r.link.outline_width),D.select(\"circle\").attr(\"fill\",G(i)).attr(\"stroke\",z(i)),D.select(\"circle:nth-child(3)\").attr(\"fill\",G(l)).attr(\"stroke\",z(l)),U.select(\"circle\").attr(\"fill\",H(t)).attr(\"stroke\",R(t)),U.select(\"h1\").html(F(t.type).label),U.select(\"p\").html(t.text),x.style(\"display\",\"inline-block\")}(t.datum())}function X(){g.style(\"display\",\"none\"),x.style(\"display\",\"none\")}function Z(t,e,n){t.selectAll(\"*\").interrupt().transition(),t.selectAll(\"*\").attr(\"stroke\",e).attr(\"stroke-width\",n)}function $(t,e,n,i){t.select(\"*\").transition().attr(\"r\",e).attr(\"stroke\",n).attr(\"stroke-width\",i),t.select(\"*:nth-child(2)\").transition().attr(\"stroke\",n).attr(\"stroke-width\",i)}function tt(t,e,n){t.selectAll(\"*\").transition().attr(\"stroke\",e).attr(\"stroke-width\",n)}function et(t){var e=[];if(0===t.layer){for(var n=0;n<t.successor_links.length;n++){var i=T(t.successor_links[n].successor_id);i.all_data&&(e.push(t.id+\"->\"+i.id),e.push(i.id),e=e.concat(et(i)))}e=e.concat(L.map(function(t){return t.id}))}else for(var r=0;r<t.successor_links.length;r++){var l=T(t.successor_links[r].successor_id);e.push(t.id+\"->\"+l.id),e.push(l.id),e=e.concat(et(l))}return t.primary&&e.push(_.id),e}function nt(t){var e,n;X(),W(t),m=t.classed(\"node\")?et(t.datum()):(e=t.datum(),(n=et(T(e.dest))).push(e.dest),n),null!==k&&t.datum().id===k.datum().id||(t.classed(\"node\")?$(t,t.datum().r*(0===t.datum().layer?1.05:1.3),r.node.outline_color_focus,r.node.outline_width_focus):tt(t,r.link.outline_color_focus,r.link.outline_width_focus));var i=u.filter(function(t){return m.includes(t.id)&&(null===k||t.id!==k.datum().id)}),l=s.filter(function(t){return m.includes(t.id)&&(null===k||t.id!==k.datum().id)});$(i,function(t){return t.r*(0===t.layer?1.02:1.1)},r.node.outline_color_focus,r.node.outline_width_focus),tt(l,r.link.outline_color_focus,r.link.outline_width_focus)}function it(t){if(X(),null===k){t.classed(\"node\")?$(t,t.datum().r,z(t.datum()),r.node.outline_width):tt(t,R(t.datum()),r.link.outline_width);var e=u.filter(function(t){return m.includes(t.id)}),n=s.filter(function(t){return m.includes(t.id)});$(e,function(t){return t.r},z,r.node.outline_width),tt(n,R,r.link.outline_width)}else if(W(k),t.datum().id!==k.datum().id){w.includes(t.datum().id)?t.classed(\"node\")?$(t,t.datum().r*(0===t.datum().layer?1.02:1.1),r.node.outline_color_focus,r.node.outline_width_focus):tt(t,r.link.outline_color_focus,r.link.outline_width_focus):t.classed(\"node\")?$(t,t.datum().r,z(t.datum()),r.node.outline_width):tt(t,R(t.datum()),r.link.outline_width);var i=u.filter(function(t){return m.includes(t.id)&&k.datum().id!==t.id&&!w.includes(t.id)}),l=s.filter(function(t){return m.includes(t.id)&&k.datum().id!==t.id&&!w.includes(t.id)});$(i,function(t){return t.r},z,r.node.outline_width),tt(l,R,r.link.outline_width)}m=null}function rt(t){if(null!==k&&t.datum().id===k.datum().id)Z(t,t.classed(\"node\")?r.node.outline_color_focus:r.link.outline_color_focus,t.classed(\"node\")?r.node.outline_width_focus:r.link.outline_width_focus),k=null,w=[];else{var e=m;if(null!==k){e.includes(k.datum().id)?k.classed(\"node\")?$(k,k.datum().r*(0===k.datum().layer?1.02:1.1),r.node.outline_color_focus,r.node.outline_width_focus):tt(k,r.link.outline_color_focus,r.link.outline_width_focus):k.classed(\"node\")?$(k,k.datum().r,z(k.datum()),r.node.outline_width):tt(k,R(k.datum()),r.link.outline_width);var n=u.filter(function(n){return w.includes(n.id)&&n.id!==t.datum().id&&!e.includes(n.id)}),i=s.filter(function(n){return w.includes(n.id)&&n.id!==t.datum().id&&!e.includes(n.id)});$(n,function(t){return t.r},z,r.node.outline_width),tt(i,R,r.link.outline_width)}Z(t,t.classed(\"node\")?r.node.outline_color_saved:r.link.outline_color_saved,t.classed(\"node\")?r.node.outline_width_saved:r.link.outline_width_saved),k=t,w=e}}function lt(){(function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t})()(\"h1\").html(i.title),function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\"p\").html(i.intro),function(){var t=b.select(\"defs\").selectAll(\".node_pat_identifiable\").data(o).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_identifiable\"}).classed(\".node_pat_identifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");t.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?r.node.fill_color_all_data:r.node.fill_color_identifiable}),t.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_identifiable});var e=b.select(\"defs\").selectAll(\".node_pat_unidentifiable\").data(o).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_unidentifiable\"}).classed(\".node_pat_unidentifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");e.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?r.node.fill_color_all_data:r.node.fill_color_unidentifiable}),e.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_unidentifiable});var n=b.select(\"defs\").selectAll(\".link_pat_identifiable\").data(a).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_identifiable\"}).classed(\".link_pat_identifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");n.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?r.node.fill_color_all_data:r.link.fill_color_identifiable}),n.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_identifiable});var i=b.select(\"defs\").selectAll(\".link_pat_unidentifiable\").data(a).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_unidentifiable\"}).classed(\".link_pat_unidentifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");i.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?r.node.fill_color_all_data:r.link.fill_color_unidentifiable}),i.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_unidentifiable});var l=b.select(\"defs\").selectAll(\".use_pat\").data(d).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id}).classed(\".use_pat\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");l.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",Y),l.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image});var c=b.select(\"defs\").append(\"pattern\").attr(\"id\",h).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");c.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",r.opts_node_icon.fill_color),c.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",r.opts_icon.image)}();var t=r.display.r,e=r.node.r+r.node.outline_width,n=r.link_icon.r+r.link_icon.outline_width,f=r.opts_panel_icon.r+r.opts_panel_icon.outline_width,w=2*(r.node_panel.padding+r.node_panel.outline_width),m=2*t-w,g=2*e,x=2*(r.link_panel.padding+r.link_panel.outline_width),N=2*t-x-g-r.link_panel_graphic.margin_bottom;c=r.bg_circle.r_proportions.map(function(e){return e*t}),b.attr(\"width\",2*t).attr(\"height\",2*t),v.attr(\"transform\",\"translate(\"+t+\",\"+t+\")\"),O.style(\"border\",r.node_panel.outline_width+\"px solid\").style(\"width\",r.node_panel.width+\"px\").style(\"max-height\",m+\"px\").style(\"padding\",r.node_panel.padding+\"px\"),E.select(\"svg\").attr(\"width\",2*f).attr(\"height\",2*f),E.select(\"h2\").html(\"You have some control over this data.\"),E.select(\"circle\").attr(\"cx\",f).attr(\"cy\",f).attr(\"r\",r.opts_panel_icon.r).attr(\"fill\",J()).attr(\"stroke\",r.opts_panel_icon.outline_color).attr(\"stroke-width\",r.opts_panel_icon.outline_width),U.style(\"border\",r.link_panel.outline_width+\"px solid\").style(\"width\",r.link_panel.width+\"px\").style(\"max-height\",N+\"px\").style(\"padding\",r.link_panel.padding+\"px\"),D.attr(\"width\",r.link_panel_graphic.dist_between_nodes+2*e+\"px\").attr(\"height\",g).style(\"margin-bottom\",r.link_panel_graphic.margin_bottom),D.select(\"polyline\").attr(\"transform\",\"translate(\"+e+\",\"+e+\") rotate(270)\").attr(\"stroke-width\",0),D.select(\"circle\").attr(\"r\",r.node.r).attr(\"cx\",e).attr(\"cy\",e).attr(\"stroke-width\",r.node.outline_width),D.select(\"circle:nth-child(3)\").attr(\"r\",r.node.r).attr(\"cx\",r.link_panel_graphic.dist_between_nodes+e).attr(\"cy\",e).attr(\"stroke-width\",r.node.outline_width),U.select(\"svg\").attr(\"width\",2*n).attr(\"height\",2*n).select(\"circle\").attr(\"r\",r.link_icon.r).attr(\"cx\",n).attr(\"cy\",n).attr(\"stroke-width\",r.link_icon.outline_width),C.size([(2-r.layer_title.space_in_pi_radians)*Math.PI,t]).separation(function(t,e){return(t.parent===e.parent?1:2)/t.depth});for(var j=0;j<l.length;j++){var S=l[j];if(0===S.layer){_=S;for(var q=0;q<S.successor_links.length;q++){var V=T(S.successor_links[q].successor_id);1!==V.layer||V.all_data?V.primary=!1:(L.push(V),V.primary=!0)}}S.r=A(S);for(var W=0;W<S.successor_links.length;W++){var X=S.successor_links[W];y.push({id:S.id+\"->\"+X.successor_id,source:S.id,dest:X.successor_id,type:X.type,text:X.text})}S.layer+=1}_.layer-=1,L.map(function(t){return t.layer-=1});for(var Z=C(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(function t(e){var n=e.successor_links.slice();if(0===n.length)return{id:e.id,children:[],siblings:[]};for(var i=[],r=[],l=0;l<n.length;l++){var o=T(n[l].successor_id),a=t(o);o.layer>e.layer?i.push(Q(a,o.layer-e.layer-1)):o.layer===e.layer&&r.push(t(o));for(var d=0;d<a.siblings.length;d++)i.push(Q(a.siblings[d],o.layer-e.layer-1))}return{id:e.id,children:i,siblings:r}}(_))).descendants(),$=function(t){var e=l[t],n=r.layer_title.space_in_pi_radians/2*Math.PI,i=Z.find(function(t){return t.data.id===e.id});e.x=(i.y=+i.y)*Math.cos((i.x-=Math.PI/2)+n),e.y=i.y*Math.sin(i.x+n),0!==e.layer&&(e.x=e.x*r.node.dist_from_center_proportions[e.layer]/(e.layer/p),e.y=e.y*r.node.dist_from_center_proportions[e.layer]/(e.layer/p))},tt=0;tt<l.length;tt++)$(tt);for(var et=p-1;et>0;et--){var lt=c[et];v.append(\"circle\").attr(\"r\",lt).attr(\"fill\",r.bg_circle.fill_color).attr(\"stroke\",r.bg_circle.outline_color).attr(\"stroke-width\",r.bg_circle.outline_width);var ot=lt-r.layer_title.font_size-r.layer_title.dist_from_edge,at=2===et?\"Third parties\":i.provider_name;v.append(\"path\").attr(\"id\",\"text_layer_\"+et).attr(\"d\",\"M-\"+ot+\",0 a\"+ot+\",\"+ot+\" 0 0 1 \"+2*ot+\",0\").attr(\"fill\",\"none\"),v.append(\"text\").classed(\"layer_title\",!0).attr(\"text-anchor\",\"middle\").style(\"font-size\",r.layer_title.font_size+\"px\").style(\"fill\",r.layer_title.color).append(\"textPath\").html(at).attr(\"xlink:href\",\"#text_layer_\"+et).attr(\"startOffset\",\"50%\")}(s=v.append(\"g\").selectAll(\".link\").data(y).enter().append(\"g\").classed(\"link\",!0).attr(\"transform\",function(t){var e=T(t.source);return\"translate(\"+e.x+\",\"+e.y+\") rotate(\"+I(t)+\")\"})).filter(function(t){return!F(t.type).all_data}).append(\"polyline\").attr(\"points\",B).attr(\"fill\",K).attr(\"stroke\",R).attr(\"stroke-width\",r.link.outline_width),s.filter(function(t){return F(t.type).display_on_link}).append(\"circle\").attr(\"transform\",function(t){var e=T(t.source),n=T(t.dest);return\"translate(0,\"+(P(e.x,e.y,n.x,n.y,n.r+r.node.outline_width+r.link.head_to_node_dist)-r.link.head_len+e.r)/2+\") rotate(\"+-I(t)+\")\"}).attr(\"r\",r.link_icon_on_link.r).attr(\"fill\",H).attr(\"stroke\",R).attr(\"stroke-width\",r.link_icon.outline_width),s.on(\"mouseenter\",function(t){nt(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this)),function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this).raise()}).on(\"mouseleave\",function(t){it(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this))}).on(\"click\",function(t){rt(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this))}),(u=v.append(\"g\").selectAll(\".node\").data(l).enter().append(\"g\").classed(\"node\",!0).attr(\"transform\",function(t){return\"translate(\"+t.x+\",\"+t.y+\")\"})).append(\"circle\").attr(\"r\",A).attr(\"fill\",G).attr(\"stroke\",z).attr(\"stroke-width\",r.node.outline_width),u.filter(function(t){return!0===t.opts}).append(\"circle\").attr(\"cx\",r.opts_node_icon.cx).attr(\"cy\",r.opts_node_icon.cy).attr(\"r\",r.opts_node_icon.r).attr(\"fill\",J()).attr(\"stroke\",r.opts_node_icon.outline_color).attr(\"stroke-width\",r.opts_node_icon.outline_width),u.on(\"mouseenter\",function(t){nt(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this)),0!==t.layer&&function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this).raise()}).on(\"mouseleave\",function(t){it(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this))}).on(\"click\",function(t){rt(!function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(this))}),M.on(\"click\",function(t){var e=k;nt(e),rt(e),it(e)})}var ot=new URL(document.URL),at=ot.searchParams.get(\"policy\"),dt=ot.searchParams.get(\"visual\");null===dt&&(dt=\"default.json\"),function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t}()(\"data/policies/\"+at).then(function(t){(function(){var t=new Error(\"Cannot find module 'd3/d3.min'\");throw t.code=\"MODULE_NOT_FOUND\",t})()(\"data/visual_customizations/\"+dt).then(function(e){r=e,l=(i=t).nodes,o=i.node_types,a=i.link_types,d=i.use_types,lt()})})}]);","extractedComments":[]}