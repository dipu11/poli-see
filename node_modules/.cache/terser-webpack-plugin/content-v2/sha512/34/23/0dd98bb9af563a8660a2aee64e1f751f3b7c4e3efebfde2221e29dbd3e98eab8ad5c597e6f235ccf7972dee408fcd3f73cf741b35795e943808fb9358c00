{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/wentaoguo/Desktop/code/privacy-transparency/script.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"pol\",\"vis\",\"nodes\",\"node_types\",\"link_types\",\"use_types\",\"bg_circles_rs\",\"nodes_s\",\"links_s\",\"central_node\",\"element_types\",\"NODE\",\"LINK\",\"USE\",\"NUM_LAYERS\",\"OPTS_PAT_ID\",\"links\",\"saved_elt_s\",\"saved_elt_connected_elts_ids\",\"hovered_elt_connected_elts_ids\",\"svg_s\",\"d3\",\"select\",\"g_s\",\"append\",\"node_panel_box_s\",\"link_panel_box_s\",\"node_panel_s\",\"link_panel_s\",\"node_panel_opts_box_s\",\"node_panel_actions_box_s\",\"link_panel_graphic_s\",\"panel_close_btns_s\",\"selectAll\",\"tree\",\"primary_nodes\",\"nodeById\",\"id\",\"find\",\"linkTypeById\",\"useTypeById\",\"nodeRadius\",\"layer\",\"display\",\"node\",\"dist_from_center_proportions\",\"linkArrowPoints\",\"source\",\"dest\",\"linkPointsFromLen\",\"linkLen\",\"x\",\"y\",\"outline_width\",\"link\",\"head_to_node_dist\",\"source_x\",\"source_y\",\"dest_x\",\"dest_y\",\"subtract_len\",\"Math\",\"sqrt\",\"pow\",\"len\",\"len_to_head\",\"head_len\",\"w1\",\"width\",\"w2\",\"head_width\",\"linkRotation\",\"atan2\",\"PI\",\"nodeOutlineColor\",\"identifiable\",\"outline_color_identifiable\",\"outline_color_unidentifiable\",\"linkFillColor\",\"all_data\",\"fill_color_all_data\",\"fill_color_identifiable\",\"fill_color_unidentifiable\",\"linkOutlineColor\",\"linkOutlineColorByDestId\",\"useTypeFillColor\",\"use_icon\",\"unknown\",\"fill_color_unknown\",\"fill_color_normal\",\"getNodePat\",\"type\",\"getLinkPat\",\"getOptsPat\",\"makeStick\",\"child\",\"num_ancestors\",\"children\",\"updateNodePanel\",\"fill_color\",\"outline_color\",\"node_panel\",\"style\",\"html\",\"label\",\"text\",\"opts\",\"opts_text\",\"actions\",\"track_links\",\"use_all_data\",\"uses\",\"length\",\"push\",\"elt_type\",\"successor_links\",\"includes\",\"data_handler\",\"remove\",\"action_divs_s\",\"data\",\"enter\",\"classed\",\"icon_r_full\",\"action_divs_svgs_s\",\"attr\",\"action_divs_use_svgs_s\",\"filter\",\"action_divs_link_svgs_s\",\"successor_id\",\"linkFillColorByDestId\",\"display_on_link\",\"link_icon_on_link\",\"link_icon\",\"description\",\"updatePanel\",\"datum\",\"link_panel\",\"node_r_full\",\"link_panel_graphic\",\"dist_between_nodes\",\"updateLinkPanel\",\"hidePanels\",\"changeSelectionOutline\",\"interrupt\",\"transition\",\"transitionNodeSelection\",\"transitionLinkSelection\",\"findNodeConnectedEltIds\",\"connected_ids\",\"concat\",\"map\",\"primary\",\"onMouseEnter\",\"outline_color_focus\",\"outline_width_focus\",\"connected_nodes_s\",\"connected_links_s\",\"onMouseLeave\",\"onClick\",\"new_clicked_elt_connected_nodes_ids\",\"outline_color_saved\",\"outline_width_saved\",\"main\",\"title\",\"intro\",\"node_pats_identifiable\",\"image_identifiable\",\"node_pats_unidentifiable\",\"image_unidentifiable\",\"link_pats_identifiable\",\"link_pats_unidentifiable\",\"use_pats\",\"image\",\"opts_pat\",\"opts_node_icon\",\"opts_icon\",\"setUpPats\",\"display_r\",\"link_icon_r_full\",\"opts_panel_icon_r_full\",\"opts_panel_icon\",\"node_panel_extra_space\",\"padding\",\"node_panel_max_height\",\"link_panel_graphic_height\",\"link_panel_extra_space\",\"link_panel_max_height\",\"margin_bottom\",\"bg_circle\",\"r_proportions\",\"size\",\"layer_title\",\"space_in_pi_radians\",\"separation\",\"a\",\"b\",\"parent\",\"depth\",\"j\",\"tree_nodes\",\"hierarchy\",\"makeTree\",\"root\",\"slice\",\"siblings\",\"s_branch\",\"descendants\",\"_loop\",\"offset\",\"tree_n\",\"cos\",\"sin\",\"r_for_text\",\"font_size\",\"dist_from_edge\",\"provider_name\",\"color\",\"on\",\"this\",\"raise\",\"cx\",\"cy\",\"url\",\"URL\",\"document\",\"searchParams\",\"v\",\"json\",\"then\",\"policy_json\",\"visual_json\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"// enumerated constants for some types of elements\\nconst element_types =\\n{\\n  NODE: \\\"node\\\",\\n  LINK: \\\"link\\\",\\n  USE: \\\"use\\\"\\n}\\n\\nconst NUM_LAYERS = 3;\\nconst OPTS_PAT_ID = \\\"pat_opts\\\";\\n\\n// objects for policy- and visual-related data\\nvar pol;\\nvar vis;\\n\\n// arrays for nodes and links\\nvar nodes;\\nvar links = [];\\n\\n// arrays for node, link, and use types\\nvar node_types;\\nvar link_types;\\nvar use_types;\\n\\n// selection of the saved element\\nvar saved_elt_s = null;\\n// array of ids of elements connected with the saved element\\nvar saved_elt_connected_elts_ids = [];\\n// array of ids of elements connected with the currently hovered element\\nvar hovered_elt_connected_elts_ids = [];\\n\\n\\n// selection of svg to contain the main body of the graph\\nvar svg_s = d3.select(\\\"#canvas\\\");\\n// selection of g to be placed at center of the graph\\nvar g_s = svg_s.append(\\\"g\\\");\\n\\n// selections of div containers for panels and related display elements\\nvar node_panel_box_s = d3.select(\\\"#node_panel_box\\\");\\nvar link_panel_box_s = d3.select(\\\"#link_panel_box\\\");\\n\\n// selections of div panels to display additional information about nodes and links\\nvar node_panel_s = node_panel_box_s.select(\\\"#node_panel\\\");\\nvar link_panel_s = link_panel_box_s.select(\\\"#link_panel\\\");\\n\\n// selections of divs to display information about options available to the user regarding the data as well as\\n// permitted actions that can be performed by the entity handling the data\\nvar node_panel_opts_box_s = node_panel_s.select(\\\"#node_panel_opts_box\\\");\\nvar node_panel_actions_box_s = node_panel_s.select(\\\"#node_panel_actions_box\\\");\\n\\n// selection of svg to display graphic above link panel\\nvar link_panel_graphic_s = link_panel_box_s.select(\\\"#link_panel_graphic\\\");\\n\\n// selection of panel close buttons\\nvar panel_close_btns_s = d3.selectAll(\\\".close_btn\\\");\\n\\n// array containing radii of background circles\\nvar bg_circles_rs;\\n\\n// node-mapping object to generate tree\\nvar root;\\n// D3 tree to organize nodes\\nvar tree = d3.tree();\\n\\n// selection of nodes to represent personal data\\nvar nodes_s;\\n// selection of links to connect nodes\\nvar links_s;\\n\\n// central node\\nvar central_node;\\n// array of primary nodes, direct successors of the central node in layer 1 that are not all-data nodes\\nvar primary_nodes = [];\\n\\n\\n\\n// return the node with a given id\\nfunction nodeById(id)\\n{\\n  return nodes.find(n => n.id === id);\\n}\\n\\n// return the link with a given id\\nfunction linkById(id)\\n{\\n  return links.find(l => l.id === id);\\n}\\n\\n// return the node type with a given id\\nfunction nodeTypeById(id)\\n{\\n  return node_types.find(t => t.id === id);\\n}\\n\\n// return the link type with a given id\\nfunction linkTypeById(id)\\n{\\n  return link_types.find(t => t.id === id);\\n}\\n\\n// return the use type with a given id\\nfunction useTypeById(id)\\n{\\n  return use_types.find(t => t.id === id);\\n}\\n\\n// return the radius of a node\\nfunction nodeRadius(n)\\n{\\n  if(n.layer === 0)\\n  {\\n    return vis.display.r * vis.node.dist_from_center_proportions[1];\\n  }\\n  return vis.node.r;\\n}\\n\\n// return a string containing the points for a link polyline arrow pointing down, given a link\\nfunction linkArrowPoints(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n  var len = linkLen(source.x, source.y, dest.x, dest.y, dest.r + vis.node.outline_width +\\n    vis.link.head_to_node_dist);\\n  return linkPointsFromLen(len);\\n}\\n\\n// return the length of a link polyline arrow, given relevant values\\nfunction linkLen(source_x, source_y, dest_x, dest_y, subtract_len)\\n{\\n  return Math.sqrt( Math.pow((dest_x - source_x), 2) + Math.pow((dest_y - source_y), 2)) - subtract_len;\\n}\\n\\n// return a string containing the points for a link polyline arrow pointing down, given its length\\nfunction linkPointsFromLen(len)\\n{\\n  var len_to_head = len - vis.link.head_len;\\n  var w1 = vis.link.width / 2;\\n  var w2 = vis.link.head_width / 2;\\n  return \\\"0 0, \\\" +\\n    w1 + \\\" 0, \\\" +\\n    w1 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    w2 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    \\\"0 \\\" + len + \\\", \\\" +\\n    -w2 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    -w1 + \\\" \\\" + len_to_head + \\\", \\\" +\\n    -w1 + \\\" 0, 0 0\\\";\\n}\\n\\n// return the degrees by which a link needs to be rotated counterclockwise from pointing straight down in order to\\n// point in the right direction\\nfunction linkRotation(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n  var theta = Math.atan2((source.y - dest.y), (source.x - dest.x));\\n  return theta * 180 / Math.PI + 90;\\n}\\n\\n// return the outline color of a node\\nfunction nodeOutlineColor(n)\\n{\\n  if(n.identifiable)\\n  {\\n    return vis.node.outline_color_identifiable;\\n  }\\n  return vis.node.outline_color_unidentifiable;\\n}\\n\\n// return the fill color of a link\\nfunction linkFillColor(l)\\n{\\n  var n = nodeById(l.dest);\\n  if(n.all_data)\\n  {\\n    return vis.link.fill_color_all_data;\\n  }\\n  if(n.identifiable)\\n  {\\n    return vis.link.fill_color_identifiable;\\n  }\\n  return vis.link.fill_color_unidentifiable;\\n}\\n\\n// return the fill color of a link, given its destination id\\nfunction linkFillColorByDestId(id)\\n{\\n  var n = nodeById(id);\\n  if(n.all_data)\\n  {\\n    return vis.link.fill_color_all_data;\\n  }\\n  if(n.identifiable)\\n  {\\n    return vis.link.fill_color_identifiable;\\n  }\\n  return vis.link.fill_color_unidentifiable;\\n}\\n\\n// return the outline color of a link\\nfunction linkOutlineColor(l)\\n{\\n  if(nodeById(l.dest).identifiable)\\n  {\\n    return vis.link.outline_color_identifiable;\\n  }\\n  return vis.link.outline_color_unidentifiable;\\n}\\n\\n// return the outline color of a link, given its destination id\\nfunction linkOutlineColorByDestId(id)\\n{\\n  if(nodeById(id).identifiable)\\n  {\\n    return vis.link.outline_color_identifiable;\\n  }\\n  return vis.link.outline_color_unidentifiable;\\n}\\n\\n// return the fill color of a use type\\nfunction useTypeFillColor(t)\\n{\\n  if(t.all_data)\\n  {\\n    return vis.use_icon.fill_color_all_data;\\n  }\\n  else if(t.unknown)\\n  {\\n    return vis.use_icon.fill_color_unknown;\\n  }\\n  return vis.use_icon.fill_color_normal;\\n}\\n\\n// return the fill pattern of a node\\nfunction getNodePat(n)\\n{\\n  return n.identifiable ? \\\"url(#pat_\\\" + n.type + \\\"_identifiable)\\\"\\n                        : \\\"url(#pat_\\\" + n.type + \\\"_unidentifiable)\\\";\\n}\\n\\n// return the icon fill pattern of a link\\nfunction getLinkPat(l)\\n{\\n  return nodeById(l.dest).identifiable ? \\\"url(#pat_\\\" + l.type + \\\"_identifiable)\\\"\\n                                       : \\\"url(#pat_\\\" + l.type + \\\"_unidentifiable)\\\";\\n}\\n\\n// return the icon fill pattern of a use, given its type id\\nfunction getUsePatByTypeId(id)\\n{\\n  return \\\"url(#pat_\\\" + id + \\\")\\\";\\n}\\n\\n// return the fill pattern of an options icon\\nfunction getOptsPat()\\n{\\n  return \\\"url(#\\\" + OPTS_PAT_ID + \\\")\\\";\\n}\\n\\n// set up patterns to fill nodes, link icons, use icons, and other svg elements\\nfunction setUpPats()\\n{\\n  // node patterns\\n  var node_pats_identifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".node_pat_identifiable\\\")\\n    .data(node_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_identifiable\\\")\\n      .classed(\\\".node_pat_identifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  node_pats_identifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.node.fill_color_identifiable);\\n  node_pats_identifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_identifiable);\\n\\n  var node_pats_unidentifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".node_pat_unidentifiable\\\")\\n    .data(node_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_unidentifiable\\\")\\n      .classed(\\\".node_pat_unidentifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  node_pats_unidentifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.node.fill_color_unidentifiable);\\n  node_pats_unidentifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_unidentifiable);\\n\\n  // link patterns\\n  var link_pats_identifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".link_pat_identifiable\\\")\\n    .data(link_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_identifiable\\\")\\n      .classed(\\\".link_pat_identifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  link_pats_identifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.link.fill_color_identifiable);\\n  link_pats_identifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_identifiable);\\n\\n  var link_pats_unidentifiable = svg_s.select(\\\"defs\\\").selectAll(\\\".link_pat_unidentifiable\\\")\\n    .data(link_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id + \\\"_unidentifiable\\\")\\n      .classed(\\\".link_pat_unidentifiable\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  link_pats_unidentifiable.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", d => d.all_data ? vis.node.fill_color_all_data : vis.link.fill_color_unidentifiable);\\n  link_pats_unidentifiable.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image_unidentifiable);\\n\\n  // use icon patterns\\n  var use_pats = svg_s.select(\\\"defs\\\").selectAll(\\\".use_pat\\\")\\n    .data(use_types)\\n    .enter()\\n    .append(\\\"pattern\\\")\\n      .attr(\\\"id\\\", d => \\\"pat_\\\" + d.id)\\n      .classed(\\\".use_pat\\\", true)\\n      .attr(\\\"width\\\", \\\"1\\\")\\n      .attr(\\\"height\\\", \\\"1\\\")\\n      .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  use_pats.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", useTypeFillColor);\\n  use_pats.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", d => d.image);\\n\\n  // options icon pattern\\n  var opts_pat = svg_s.select(\\\"defs\\\").append(\\\"pattern\\\")\\n    .attr(\\\"id\\\", OPTS_PAT_ID)\\n    .attr(\\\"width\\\", \\\"1\\\")\\n    .attr(\\\"height\\\", \\\"1\\\")\\n    .attr(\\\"patternContentUnits\\\", \\\"objectBoundingBox\\\");\\n  opts_pat.append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", \\\".5\\\")\\n    .attr(\\\"cy\\\", \\\".5\\\")\\n    .attr(\\\"r\\\", \\\".5\\\")\\n    .attr(\\\"fill\\\", vis.opts_node_icon.fill_color);\\n  opts_pat.append(\\\"image\\\")\\n    .attr(\\\"x\\\", \\\".2\\\")\\n    .attr(\\\"y\\\", \\\".2\\\")\\n    .attr(\\\"width\\\", \\\".6\\\")\\n    .attr(\\\"height\\\", \\\".6\\\")\\n    .attr(\\\"xlink:href\\\", vis.opts_icon.image);\\n}\\n\\n// helper function to recursively create a stick with the child at the bottom and num_ancestors ancestors\\nfunction makeStick(child, num_ancestors)\\n{\\n  return num_ancestors <= 0 ? child\\n                            : makeStick({ id: null, children: [child] }, num_ancestors - 1);\\n}\\n\\n// recursively create a tree, given the root\\nfunction makeTree(root)\\n{\\n  // make a copy of the root's successor links\\n  var successor_links = root.successor_links.slice();\\n\\n  // if there are no successor links, then return the root as a leaf\\n  if(successor_links.length === 0)\\n  {\\n    return { id: root.id, children: [], siblings: [] };\\n  }\\n  // else if there are successor links, then return the root's branch\\n  else\\n  {\\n    var children = [];\\n    var siblings = [];\\n\\n    // iterate through successor links\\n    for(let i = 0; i < successor_links.length; i++)\\n    {\\n      let s = nodeById(successor_links[i].successor_id);\\n      let s_branch = makeTree(s);\\n\\n      // if the successor is in a higher layer than the root, then add it as a child\\n      if(s.layer > root.layer)\\n        children.push(makeStick(s_branch, s.layer - root.layer - 1));\\n      // else if the successor is in the same layer as the root, then add it as a sibling\\n      else if(s.layer === root.layer)\\n        siblings.push(makeTree(s));\\n\\n      // add the successor's siblings as children of the root\\n      for(let j = 0; j < s_branch.siblings.length; j++)\\n      {\\n        children.push(makeStick(s_branch.siblings[j], s.layer - root.layer - 1));\\n      }\\n    }\\n\\n    // return a tree\\n    return { id: root.id, children: children, siblings: siblings };\\n  }\\n}\\n\\n// update the node panel based on a node\\nfunction updateNodePanel(n)\\n{\\n  // set color of panel based on whether data is identifiable or not\\n  var fill_color;\\n  var outline_color;\\n  if(n.identifiable)\\n  {\\n    fill_color = vis.node_panel.fill_color_identifiable;\\n    outline_color = vis.node_panel.outline_color_identifiable;\\n  }\\n  else\\n  {\\n    fill_color = vis.node_panel.fill_color_unidentifiable;\\n    outline_color = vis.node_panel.outline_color_unidentifiable;\\n  }\\n  node_panel_s\\n    .style(\\\"background-color\\\", fill_color)\\n    .style(\\\"border-color\\\", outline_color);\\n\\n\\n  // set basic panel text\\n  node_panel_s.select(\\\"h1\\\")\\n    .html(n.label);\\n  node_panel_s.select(\\\"p\\\")\\n    .html(n.text);\\n\\n  // set information about options regarding the node\\n  if(n.opts)\\n  {\\n    node_panel_opts_box_s.select(\\\"p\\\")\\n      .html(n.opts_text);\\n    node_panel_opts_box_s.style(\\\"display\\\", \\\"flex\\\");\\n  }\\n  else\\n  {\\n    node_panel_opts_box_s.style(\\\"display\\\", \\\"none\\\");\\n  }\\n\\n  // combine uses and links into one array of permitted actions that can be performed on data\\n  var actions = [];\\n  // list to prevent the same types of links from being displayed multiple times\\n  var track_links = [];\\n  // string to record the id of the all-data use if found, and null otherwise\\n  var use_all_data = null;\\n  for(let i = 0; i < n.uses.length; i++)\\n  {\\n    if(! useTypeById(n.uses[i]).all_data)\\n    {\\n      actions.push({type:n.uses[i], elt_type:element_types.USE});\\n    }\\n    else\\n    {\\n      use_all_data = n.uses[i];\\n    }\\n  }\\n  for(let i = 0; i < n.successor_links.length; i++)\\n  {\\n    let l = n.successor_links[i];\\n    if(! track_links.includes(l.type) && ! linkTypeById(l.type).all_data)\\n    {\\n      actions.push(l);\\n      actions[actions.length - 1].elt_type = element_types.LINK;\\n      track_links.push(l.type);\\n    }\\n  }\\n  if(use_all_data !== null)\\n  {\\n    actions.push({type:use_all_data, elt_type:element_types.USE});\\n  }\\n\\n  // if there are no actions to display, then hide the section\\n  if(actions.length === 0)\\n  {\\n    node_panel_actions_box_s\\n      .style(\\\"display\\\", \\\"none\\\");\\n  }\\n  // if there are actions to display, then display them\\n  else\\n  {\\n    node_panel_actions_box_s\\n      .style(\\\"display\\\", \\\"block\\\");\\n\\n    // update the heading\\n    node_panel_actions_box_s.select(\\\"h2\\\")\\n      .html(n.data_handler + \\\" can use this data to...\\\");\\n\\n    // remove existing action divs\\n    node_panel_actions_box_s.selectAll(\\\"div\\\").remove();\\n\\n    // add action divs to the panel\\n    var action_divs_s = node_panel_actions_box_s.selectAll(\\\"div\\\")\\n      .data(actions)\\n      .enter().append(\\\"div\\\")\\n        .classed(\\\"panel_list_item_box\\\", true)\\n        .style(\\\"border-bottom\\\", vis.node_panel.outline_width + \\\"px solid \\\" + outline_color);\\n\\n    // remove bottom border from last action div\\n    node_panel_actions_box_s.select(\\\"div:last-child\\\")\\n      .style(\\\"border-bottom\\\", \\\"none\\\");\\n\\n    // add icons and text to the action divs\\n    var icon_r_full = vis.use_icon.r + vis.use_icon.outline_width;\\n    var action_divs_svgs_s = action_divs_s.append(\\\"svg\\\")\\n      .attr(\\\"height\\\", icon_r_full * 2 + \\\"px\\\");\\n    var action_divs_use_svgs_s = action_divs_svgs_s.filter(d => d.elt_type === element_types.USE);\\n    var action_divs_link_svgs_s = action_divs_svgs_s.filter(d => d.elt_type === element_types.LINK);\\n\\n    action_divs_use_svgs_s\\n      .style(\\\"width\\\", (icon_r_full * 2) + \\\"px\\\");\\n    action_divs_link_svgs_s\\n      .style(\\\"width\\\", (icon_r_full * 5 + vis.link.outline_width) + \\\"px\\\");\\n\\n    action_divs_use_svgs_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.use_icon.r)\\n      .attr(\\\"cx\\\", icon_r_full)\\n      .attr(\\\"cy\\\", icon_r_full)\\n      .attr(\\\"fill\\\", d => getUsePatByTypeId(d.type))\\n      .attr(\\\"stroke\\\", vis.use_icon.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.use_icon.outline_width);\\n    action_divs_link_svgs_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.use_icon.r)\\n      .attr(\\\"cx\\\", 4 * icon_r_full + vis.link.outline_width)\\n      .attr(\\\"cy\\\", icon_r_full)\\n      .attr(\\\"fill\\\", d => getNodePat(nodeById(d.successor_id)))\\n      .attr(\\\"stroke\\\", d => nodeOutlineColor(nodeById(d.successor_id)))\\n      .attr(\\\"stroke-width\\\", vis.use_icon.outline_width);\\n\\n    action_divs_link_svgs_s.append(\\\"polyline\\\")\\n      .attr(\\\"transform\\\", \\\"translate(\\\" + vis.link.outline_width + \\\",\\\" + icon_r_full + \\\") rotate(270)\\\")\\n      .attr(\\\"points\\\", linkPointsFromLen(linkLen(0, icon_r_full, 4 * icon_r_full, icon_r_full,\\n        icon_r_full + vis.link.head_to_node_dist)))\\n      .attr(\\\"fill\\\", d => linkFillColorByDestId(d.successor_id))\\n      .attr(\\\"stroke\\\", d => linkOutlineColorByDestId(d.successor_id))\\n      .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n\\n    // add icons for special types of links\\n    action_divs_link_svgs_s.filter(d => linkTypeById(d.type).display_on_link).append(\\\"circle\\\")\\n      .attr(\\\"transform\\\", function(d)\\n      {\\n        let len_to_head = linkLen(0, icon_r_full, 4 * icon_r_full, icon_r_full,\\n          icon_r_full + vis.link.head_to_node_dist) - vis.link.head_len;\\n        return \\\"translate(\\\" + (len_to_head/2 + vis.link.outline_width) + \\\",\\\" + icon_r_full + \\\")\\\";\\n      })\\n      .attr(\\\"r\\\", vis.link_icon_on_link.r)\\n      .attr(\\\"fill\\\", d => getLinkPat(linkById(n.id + \\\"->\\\" + d.successor_id)))\\n      .attr(\\\"stroke\\\", d => linkOutlineColorByDestId(d.successor_id))\\n      .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n    action_divs_s.filter(d => d.elt_type === element_types.USE).append(\\\"p\\\")\\n      .html(d => useTypeById(d.type).description);\\n    action_divs_s.filter(d => d.elt_type === element_types.LINK).append(\\\"p\\\")\\n      .html(d => linkTypeById(d.type).description);\\n  }\\n\\n  // show the panel\\n  node_panel_box_s\\n    .style(\\\"display\\\", \\\"inline-block\\\");\\n}\\n\\n// update the link panel based on a link\\nfunction updateLinkPanel(l)\\n{\\n  var source = nodeById(l.source);\\n  var dest = nodeById(l.dest);\\n\\n  // set color of panel based on whether data of destination node is identifiable or not\\n  var fill_color;\\n  var outline_color;\\n  if(dest.identifiable)\\n  {\\n    fill_color = vis.link_panel.fill_color_identifiable;\\n    outline_color = vis.link_panel.outline_color_identifiable;\\n  }\\n  else\\n  {\\n    fill_color = vis.link_panel.fill_color_unidentifiable;\\n    outline_color = vis.link_panel.outline_color_unidentifiable;\\n  }\\n  link_panel_s\\n    .style(\\\"background-color\\\", fill_color)\\n    .style(\\\"border-color\\\", outline_color);\\n\\n  var node_r_full = vis.node.r + vis.node.outline_width;\\n\\n  // update the link graphic\\n  link_panel_graphic_s.select(\\\"polyline\\\")\\n      .attr(\\\"points\\\", linkPointsFromLen(linkLen(node_r_full, node_r_full,\\n        vis.link_panel_graphic.dist_between_nodes + node_r_full, node_r_full,\\n        node_r_full + vis.link.head_to_node_dist)))\\n      .attr(\\\"fill\\\", linkFillColor(l))\\n      .attr(\\\"stroke\\\", linkOutlineColor(l))\\n      .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n  link_panel_graphic_s.select(\\\"circle\\\")\\n      .attr(\\\"fill\\\", getNodePat(source))\\n      .attr(\\\"stroke\\\", nodeOutlineColor(source));\\n  link_panel_graphic_s.select(\\\"circle:nth-child(3)\\\")\\n      .attr(\\\"fill\\\", getNodePat(dest))\\n      .attr(\\\"stroke\\\", nodeOutlineColor(dest));\\n\\n  // set the icon and title for the link panel\\n  link_panel_s.select(\\\"circle\\\")\\n    .attr(\\\"fill\\\", getLinkPat(l))\\n    .attr(\\\"stroke\\\", linkOutlineColor(l));\\n  link_panel_s.select(\\\"h1\\\")\\n    .html(linkTypeById(l.type).label);\\n  link_panel_s.select(\\\"p\\\")\\n    .html(l.text);\\n\\n  // show the panel\\n  link_panel_box_s\\n    .style(\\\"display\\\", \\\"inline-block\\\");\\n}\\n\\n// update either the node or the link panel, based on an input selection\\nfunction updatePanel(s)\\n{\\n  if(s.classed(\\\"node\\\"))\\n  {\\n    updateNodePanel(s.datum());\\n  }\\n  else\\n  {\\n    updateLinkPanel(s.datum());\\n  }\\n}\\n\\n// hide the panels\\nfunction hidePanels()\\n{\\n  node_panel_box_s\\n    .style(\\\"display\\\", \\\"none\\\");\\n  link_panel_box_s\\n    .style(\\\"display\\\", \\\"none\\\");\\n}\\n\\n// change a node or link selection's outline color and outline width\\nfunction changeSelectionOutline(s, outline_color, outline_width)\\n{\\n  s.selectAll(\\\"*\\\")\\n    .interrupt()\\n    .transition();\\n  s.selectAll(\\\"*\\\")\\n    .attr(\\\"stroke\\\", outline_color)\\n    .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// transition a node selection's radius, outline color, and outline width\\nfunction transitionNodeSelection(s, r, outline_color, outline_width)\\n{\\n  s.select(\\\"*\\\")\\n    .transition()\\n      .attr(\\\"r\\\", r)\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n  s.select(\\\"*:nth-child(2)\\\")\\n    .transition()\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// transition a link selection's outline color and outline width\\nfunction transitionLinkSelection(s, outline_color, outline_width)\\n{\\n  s.selectAll(\\\"*\\\")\\n    .transition()\\n      .attr(\\\"stroke\\\", outline_color)\\n      .attr(\\\"stroke-width\\\", outline_width);\\n}\\n\\n// find a node's connected elements' ids\\nfunction findNodeConnectedEltIds(n)\\n{\\n  var connected_ids = [];\\n\\n  // if n is the central node, then add all-data successors and their descendants, as well as primary nodes\\n  if(n.layer === 0)\\n  {\\n    for(let i = 0; i < n.successor_links.length; i++)\\n    {\\n      let s = nodeById(n.successor_links[i].successor_id);\\n\\n      if(s.all_data)\\n      {\\n        connected_ids.push(n.id + \\\"->\\\" + s.id);\\n        connected_ids.push(s.id);\\n        connected_ids = connected_ids.concat(findNodeConnectedEltIds(s));\\n      }\\n    }\\n\\n    connected_ids = connected_ids.concat(primary_nodes.map(n => n.id));\\n  }\\n  // if n is not the central node, add successors and their descendants\\n  else\\n  {\\n    for(let i = 0; i < n.successor_links.length; i++)\\n    {\\n      let s = nodeById(n.successor_links[i].successor_id);\\n\\n      connected_ids.push(n.id + \\\"->\\\" + s.id);\\n      connected_ids.push(s.id);\\n      connected_ids = connected_ids.concat(findNodeConnectedEltIds(s));\\n    }\\n  }\\n\\n  // if n is a primary node, add the central node\\n  if(n.primary)\\n  {\\n    connected_ids.push(central_node.id);\\n  }\\n\\n  return connected_ids;\\n}\\n\\n// find a link's connected elements' ids\\nfunction findLinkConnectedEltIds(l)\\n{\\n  var connected_ids = findNodeConnectedEltIds(nodeById(l.dest));\\n  connected_ids.push(l.dest);\\n  return connected_ids;\\n}\\n\\n// handle interactions when the cursor enters an interactive element\\nfunction onMouseEnter(s)\\n{\\n  // display the correct panel\\n  hidePanels();\\n  updatePanel(s);\\n\\n  // find elements connected to the hovered element\\n  hovered_elt_connected_elts_ids = s.classed(\\\"node\\\") ? findNodeConnectedEltIds(s.datum())\\n                                                     : findLinkConnectedEltIds(s.datum());\\n\\n  // if the hovered element is not the saved element\\n  if(saved_elt_s === null || s.datum().id !== saved_elt_s.datum().id)\\n  {\\n    // change the appearance of the hovered element to indicate focus\\n    if(s.classed(\\\"node\\\"))\\n    {\\n      transitionNodeSelection(s, s.datum().r * (s.datum().layer === 0 ? 1.05 : 1.3), vis.node.outline_color_focus,\\n        vis.node.outline_width_focus);\\n    }\\n    else\\n    {\\n      transitionLinkSelection(s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n    }\\n  }\\n\\n  // change the appearance of connected elements that are not the saved element to indicate focus\\n  let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n    (saved_elt_s === null || d.id !== saved_elt_s.datum().id));\\n  let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n    (saved_elt_s === null || d.id !== saved_elt_s.datum().id));\\n  transitionNodeSelection(connected_nodes_s, d => d.r * (d.layer === 0 ? 1.02 : 1.1),\\n    vis.node.outline_color_focus, vis.node.outline_width_focus);\\n  transitionLinkSelection(connected_links_s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n}\\n\\n// handle interactions when the cursor leaves an interactive element\\nfunction onMouseLeave(s)\\n{\\n  // hide the panel\\n  hidePanels();\\n\\n  // if there is no saved element\\n  if(saved_elt_s === null)\\n  {\\n    // change the appearance of the node back to normal\\n    if(s.classed(\\\"node\\\"))\\n    {\\n      transitionNodeSelection(s, s.datum().r, nodeOutlineColor(s.datum()), vis.node.outline_width);\\n    }\\n    else\\n    {\\n      transitionLinkSelection(s, linkOutlineColor(s.datum()), vis.link.outline_width);\\n    }\\n\\n    // change the appearance of connected elements back to normal\\n    let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id));\\n    let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id));\\n    transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n    transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n  }\\n  // if there is a saved element\\n  else\\n  {\\n    // update the panel to display information about the saved element\\n    updatePanel(saved_elt_s);\\n\\n    // if the cursor was over the saved element\\n    if(s.datum().id !== saved_elt_s.datum().id)\\n    {\\n      // if the element was connected to the saved element, then change its appearance to indicate focus\\n      if(saved_elt_connected_elts_ids.includes(s.datum().id))\\n      {\\n        if(s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(s, s.datum().r * (s.datum().layer === 0 ? 1.02 : 1.1),\\n            vis.node.outline_color_focus, vis.node.outline_width_focus);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n        }\\n      }\\n      // else, change its appearance back to normal\\n      else\\n      {\\n        if(s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(s, s.datum().r, nodeOutlineColor(s.datum()), vis.node.outline_width);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(s, linkOutlineColor(s.datum()), vis.link.outline_width);\\n        }\\n      }\\n\\n      // change appearance of connected elements that are not the saved element or its connected elements back to\\n      // normal\\n      let connected_nodes_s = nodes_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n        saved_elt_s.datum().id !== d.id && ! saved_elt_connected_elts_ids.includes(d.id));\\n      let connected_links_s = links_s.filter(d => hovered_elt_connected_elts_ids.includes(d.id) &&\\n        saved_elt_s.datum().id !== d.id && ! saved_elt_connected_elts_ids.includes(d.id));\\n      transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n      transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n    }\\n  }\\n\\n  // clear the array of the hovered element's connected nodes\\n  hovered_elt_connected_elts_ids = null;\\n}\\n\\n// handle interactions when the cursor clicks on an interactive element\\nfunction onClick(s)\\n{\\n  // if the new clicked element is the saved element, then unsave it\\n  if(saved_elt_s !== null && s.datum().id === saved_elt_s.datum().id)\\n  {\\n    // change outline of clicked element back to normal\\n    changeSelectionOutline(s, s.classed(\\\"node\\\") ? vis.node.outline_color_focus : vis.link.outline_color_focus,\\n      s.classed(\\\"node\\\") ? vis.node.outline_width_focus : vis.link.outline_width_focus);\\n\\n    // clear the saved element and its array of connected nodes\\n    saved_elt_s = null;\\n    saved_elt_connected_elts_ids = [];\\n  }\\n  // if the new clicked element is not the saved element, then save it\\n  else\\n  {\\n    // set nodes connected to the new clicked element\\n    let new_clicked_elt_connected_nodes_ids = hovered_elt_connected_elts_ids;\\n\\n    // if there is an old saved element, then unsave it\\n    if(saved_elt_s !== null)\\n    {\\n      // if the saved element is connected to the new clicked element, then change its appearance to indicate focus\\n      if(new_clicked_elt_connected_nodes_ids.includes(saved_elt_s.datum().id))\\n      {\\n        if(saved_elt_s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(saved_elt_s, saved_elt_s.datum().r * (saved_elt_s.datum().layer === 0 ? 1.02 : 1.1),\\n            vis.node.outline_color_focus, vis.node.outline_width_focus);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(saved_elt_s, vis.link.outline_color_focus, vis.link.outline_width_focus);\\n        }\\n      }\\n      // else, change its appearance back to normal\\n      else\\n      {\\n        if(saved_elt_s.classed(\\\"node\\\"))\\n        {\\n          transitionNodeSelection(saved_elt_s, saved_elt_s.datum().r, nodeOutlineColor(saved_elt_s.datum()),\\n            vis.node.outline_width);\\n        }\\n        else\\n        {\\n          transitionLinkSelection(saved_elt_s, linkOutlineColor(saved_elt_s.datum()), vis.link.outline_width);\\n        }\\n      }\\n\\n      // change the appearance of connected elements of the old saved element that are not the new clicked element\\n      // or its connected elements back to normal\\n      let connected_nodes_s = nodes_s.filter(d => saved_elt_connected_elts_ids.includes(d.id) &&\\n        d.id !== s.datum().id && ! new_clicked_elt_connected_nodes_ids.includes(d.id));\\n      let connected_links_s = links_s.filter(d => saved_elt_connected_elts_ids.includes(d.id) &&\\n        d.id !== s.datum().id && ! new_clicked_elt_connected_nodes_ids.includes(d.id));\\n      transitionNodeSelection(connected_nodes_s, d => d.r, nodeOutlineColor, vis.node.outline_width);\\n      transitionLinkSelection(connected_links_s, linkOutlineColor, vis.link.outline_width);\\n    }\\n\\n    // change outline of new clicked element to indicate focus\\n    changeSelectionOutline(s, s.classed(\\\"node\\\") ? vis.node.outline_color_saved : vis.link.outline_color_saved,\\n      s.classed(\\\"node\\\") ? vis.node.outline_width_saved : vis.link.outline_width_saved);\\n\\n    // update the saved element and its array of connected nodes\\n    saved_elt_s = s;\\n    saved_elt_connected_elts_ids = new_clicked_elt_connected_nodes_ids;\\n  }\\n}\\n\\n\\n\\nfunction main()\\n{\\n  // set title and intro text\\n  d3.select(\\\"h1\\\").html(pol.title);\\n  d3.select(\\\"p\\\").html(pol.intro);\\n\\n  // set up patterns for background fills\\n  setUpPats();\\n\\n  // set display variables and elements\\n  {\\n    let display_r = vis.display.r;\\n\\n    let node_r_full = vis.node.r + vis.node.outline_width;\\n    let link_icon_r_full = vis.link_icon.r + vis.link_icon.outline_width;\\n    let opts_panel_icon_r_full = vis.opts_panel_icon.r + vis.opts_panel_icon.outline_width;\\n\\n    let node_panel_extra_space = 2 * (vis.node_panel.padding + vis.node_panel.outline_width);\\n    let node_panel_max_height = 2 * display_r - node_panel_extra_space;\\n\\n    let link_panel_graphic_height = 2 * node_r_full;\\n    let link_panel_extra_space = 2 * (vis.link_panel.padding + vis.link_panel.outline_width);\\n    let link_panel_max_height = 2 * display_r - link_panel_extra_space - link_panel_graphic_height -\\n      vis.link_panel_graphic.margin_bottom;\\n\\n    bg_circles_rs = vis.bg_circle.r_proportions.map(function(x) { return x * display_r; });\\n    svg_s\\n      .attr(\\\"width\\\", 2 * display_r)\\n      .attr(\\\"height\\\", 2 * display_r);\\n    g_s.attr(\\\"transform\\\", \\\"translate(\\\" + display_r + \\\",\\\" + display_r + \\\")\\\");\\n\\n    node_panel_s\\n      .style(\\\"border\\\", vis.node_panel.outline_width + \\\"px solid\\\")\\n      .style(\\\"width\\\", vis.node_panel.width + \\\"px\\\")\\n      .style(\\\"max-height\\\", node_panel_max_height + \\\"px\\\")\\n      .style(\\\"padding\\\", vis.node_panel.padding + \\\"px\\\");\\n\\n    node_panel_opts_box_s.select(\\\"svg\\\")\\n      .attr(\\\"width\\\", 2 * opts_panel_icon_r_full)\\n      .attr(\\\"height\\\", 2 * opts_panel_icon_r_full);\\n    node_panel_opts_box_s.select(\\\"h2\\\")\\n      .html(\\\"You have some control over this data.\\\");\\n    node_panel_opts_box_s.select(\\\"circle\\\")\\n      .attr(\\\"cx\\\", opts_panel_icon_r_full)\\n      .attr(\\\"cy\\\", opts_panel_icon_r_full)\\n      .attr(\\\"r\\\", vis.opts_panel_icon.r)\\n      .attr(\\\"fill\\\", getOptsPat())\\n      .attr(\\\"stroke\\\", vis.opts_panel_icon.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.opts_panel_icon.outline_width);\\n\\n    link_panel_s\\n      .style(\\\"border\\\", vis.link_panel.outline_width + \\\"px solid\\\")\\n      .style(\\\"width\\\", vis.link_panel.width + \\\"px\\\")\\n      .style(\\\"max-height\\\", link_panel_max_height + \\\"px\\\")\\n      .style(\\\"padding\\\", vis.link_panel.padding + \\\"px\\\");\\n\\n    link_panel_graphic_s\\n      .attr(\\\"width\\\", (vis.link_panel_graphic.dist_between_nodes + 2 * node_r_full) + \\\"px\\\")\\n      .attr(\\\"height\\\", link_panel_graphic_height)\\n      .style(\\\"margin-bottom\\\", vis.link_panel_graphic.margin_bottom);\\n    link_panel_graphic_s.select(\\\"polyline\\\")\\n      .attr(\\\"transform\\\", \\\"translate(\\\" + node_r_full + \\\",\\\" + node_r_full + \\\") rotate(270)\\\")\\n      .attr(\\\"stroke-width\\\", 0);\\n    link_panel_graphic_s.select(\\\"circle\\\")\\n      .attr(\\\"r\\\", vis.node.r)\\n      .attr(\\\"cx\\\", node_r_full)\\n      .attr(\\\"cy\\\", node_r_full)\\n      .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n    link_panel_graphic_s.select(\\\"circle:nth-child(3)\\\")\\n      .attr(\\\"r\\\", vis.node.r)\\n      .attr(\\\"cx\\\", vis.link_panel_graphic.dist_between_nodes + node_r_full)\\n      .attr(\\\"cy\\\", node_r_full)\\n      .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n\\n    link_panel_s.select(\\\"svg\\\")\\n      .attr(\\\"width\\\", 2 * link_icon_r_full)\\n      .attr(\\\"height\\\", 2 * link_icon_r_full)\\n      .select(\\\"circle\\\")\\n        .attr(\\\"r\\\", vis.link_icon.r)\\n        .attr(\\\"cx\\\", link_icon_r_full)\\n        .attr(\\\"cy\\\", link_icon_r_full)\\n        .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n    tree\\n      .size([(2 - vis.layer_title.space_in_pi_radians) * Math.PI, display_r])\\n      .separation(function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth; });\\n  }\\n\\n\\n\\n  // iterate through nodes to record special nodes, change node layers to essentially create a second sub-layer in\\n  // layer 1, and create links and background links\\n  for(let i = 0; i < nodes.length; i++)\\n  {\\n    let n = nodes[i];\\n\\n    // if the node is the central node, record it, and add its successor links in layer 1 to the array of primary nodes\\n    if(n.layer === 0)\\n    {\\n      central_node = n;\\n      for(let j = 0; j < n.successor_links.length; j++)\\n      {\\n        let s = nodeById(n.successor_links[j].successor_id);\\n        if(s.layer === 1 && ! s.all_data)\\n        {\\n          primary_nodes.push(s);\\n          s.primary = true;\\n        }\\n        else\\n        {\\n          s.primary = false;\\n        }\\n      }\\n    }\\n\\n    // set the radius of the node\\n    n.r = nodeRadius(n);\\n\\n    // fill links array with link objects based on the .json data\\n    for(let j = 0; j < n.successor_links.length; j++)\\n    {\\n      let l = n.successor_links[j];\\n      links.push({ id: n.id + \\\"->\\\" + l.successor_id, source: n.id, dest: l.successor_id, type: l.type,\\n        text: l.text });\\n    }\\n\\n    // move the node one node outward to accommodate for second sub-layer within layer 1 (center node and primary\\n    // nodes will later be moved back)\\n    n.layer += 1;\\n  }\\n\\n  // move central node and primary nodes back to their original layer\\n  central_node.layer -= 1;\\n  primary_nodes.map(n => n.layer -= 1);\\n\\n\\n\\n  // map nodes and create a d3 tree\\n  root = tree(d3.hierarchy(makeTree(central_node)));\\n  let tree_nodes = root.descendants();\\n\\n  // set the coordinates of nodes to the coordinates of nodes in the tree, altered to make a radial tree\\n  for(let i = 0; i < nodes.length; i++)\\n  {\\n    let n = nodes[i];\\n    let offset = vis.layer_title.space_in_pi_radians / 2 * Math.PI;\\n    let tree_n = tree_nodes.find(function(node) { return node.data.id === n.id; });\\n    n.x = (tree_n.y = +tree_n.y) * Math.cos((tree_n.x -= Math.PI / 2) + offset);\\n    n.y = tree_n.y * Math.sin(tree_n.x + offset);\\n\\n    // adjust the distance of nodes from the center, according to specified dimensions\\n    if(n.layer !== 0)\\n    {\\n      n.x = n.x * vis.node.dist_from_center_proportions[n.layer] / (n.layer / NUM_LAYERS);\\n      n.y = n.y * vis.node.dist_from_center_proportions[n.layer] / (n.layer / NUM_LAYERS);\\n    }\\n  }\\n\\n\\n\\n  // append background circles for layers\\n  for(let i = NUM_LAYERS - 1; i > 0; i--)\\n  {\\n    let r = bg_circles_rs[i];\\n\\n    g_s.append(\\\"circle\\\")\\n      .attr(\\\"r\\\", r)\\n      .attr(\\\"fill\\\", vis.bg_circle.fill_color)\\n      .attr(\\\"stroke\\\", vis.bg_circle.outline_color)\\n      .attr(\\\"stroke-width\\\", vis.bg_circle.outline_width);\\n\\n    let r_for_text = r - vis.layer_title.font_size - vis.layer_title.dist_from_edge;\\n    let text = i === 2 ? \\\"Third parties\\\" : pol.provider_name;\\n\\n    g_s.append(\\\"path\\\")\\n      .attr(\\\"id\\\", \\\"text_layer_\\\" + i)\\n      .attr(\\\"d\\\", \\\"M-\\\" + r_for_text + \\\",0 a\\\" + r_for_text + \\\",\\\" + r_for_text + \\\" 0 0 1 \\\" + (2 * r_for_text) + \\\",0\\\")\\n      .attr(\\\"fill\\\", \\\"none\\\");\\n    g_s.append(\\\"text\\\")\\n      .classed(\\\"layer_title\\\", true)\\n      .attr(\\\"text-anchor\\\", \\\"middle\\\")\\n      .style(\\\"font-size\\\", vis.layer_title.font_size + \\\"px\\\")\\n      .style(\\\"fill\\\", vis.layer_title.color)\\n      .append(\\\"textPath\\\")\\n        .html(text)\\n        .attr(\\\"xlink:href\\\", \\\"#text_layer_\\\" + i)\\n        .attr(\\\"startOffset\\\", \\\"50%\\\");\\n  }\\n\\n\\n\\n  // append links\\n  links_s = g_s.append(\\\"g\\\").selectAll(\\\".link\\\")\\n    .data(links)\\n    .enter().append(\\\"g\\\")\\n      .classed(\\\"link\\\", true)\\n      .attr(\\\"transform\\\", function(d)\\n      {\\n        let source = nodeById(d.source);\\n        return \\\"translate(\\\" + source.x + \\\",\\\" + source.y + \\\") rotate(\\\" + linkRotation(d) + \\\")\\\";\\n      });\\n\\n  // add lines to links\\n  links_s.filter(d => ! linkTypeById(d.type).all_data).append(\\\"polyline\\\")\\n    .attr(\\\"points\\\", linkArrowPoints)\\n    .attr(\\\"fill\\\", linkFillColor)\\n    .attr(\\\"stroke\\\", linkOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.link.outline_width);\\n\\n  // add icons for special types of links\\n  links_s.filter(d => linkTypeById(d.type).display_on_link).append(\\\"circle\\\")\\n    .attr(\\\"transform\\\", function(d)\\n    {\\n      let source = nodeById(d.source);\\n      let dest = nodeById(d.dest);\\n      let len_to_head = linkLen(source.x, source.y, dest.x, dest.y, dest.r + vis.node.outline_width +\\n        vis.link.head_to_node_dist) - vis.link.head_len;\\n      let displacement = (len_to_head + source.r) / 2;\\n      return \\\"translate(0,\\\" + displacement + \\\") rotate(\\\" + (-linkRotation(d)) + \\\")\\\";\\n    })\\n    .attr(\\\"r\\\", vis.link_icon_on_link.r)\\n    .attr(\\\"fill\\\", getLinkPat)\\n    .attr(\\\"stroke\\\", linkOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.link_icon.outline_width);\\n\\n  // mouse interactions for links\\n  links_s\\n    // display more information when the cursor hovers over links\\n    .on(\\\"mouseenter\\\", function(d)\\n    {\\n      onMouseEnter(d3.select(this));\\n      d3.select(this).raise();\\n    })\\n    // hide information when the cursor leaves a link\\n    .on(\\\"mouseleave\\\", function(d) { onMouseLeave(d3.select(this)); })\\n    // retain focus on an element when it is clicked\\n    .on(\\\"click\\\", function(d) { onClick(d3.select(this)); });\\n\\n\\n\\n  // append nodes\\n  nodes_s = g_s.append(\\\"g\\\").selectAll(\\\".node\\\")\\n    .data(nodes)\\n    .enter().append(\\\"g\\\")\\n      .classed(\\\"node\\\", true)\\n      .attr(\\\"transform\\\", d => \\\"translate(\\\" + d.x + \\\",\\\" + d.y + \\\")\\\");\\n\\n  // add circles to nodes\\n  nodes_s.append(\\\"circle\\\")\\n    .attr(\\\"r\\\", nodeRadius)\\n    .attr(\\\"fill\\\", getNodePat)\\n    .attr(\\\"stroke\\\", nodeOutlineColor)\\n    .attr(\\\"stroke-width\\\", vis.node.outline_width);\\n\\n  // add options icon to nodes that contain options\\n  nodes_s.filter(d => d.opts === true).append(\\\"circle\\\")\\n    .attr(\\\"cx\\\", vis.opts_node_icon.cx)\\n    .attr(\\\"cy\\\", vis.opts_node_icon.cy)\\n    .attr(\\\"r\\\", vis.opts_node_icon.r)\\n    .attr(\\\"fill\\\", getOptsPat())\\n    .attr(\\\"stroke\\\", vis.opts_node_icon.outline_color)\\n    .attr(\\\"stroke-width\\\", vis.opts_node_icon.outline_width);\\n\\n  // mouse interactions for nodes\\n  nodes_s\\n    // display more information in the node panel when the cursor hovers over nodes\\n    .on(\\\"mouseenter\\\", function(d)\\n    {\\n      onMouseEnter(d3.select(this));\\n      if(d.layer !== 0)\\n      {\\n        d3.select(this).raise();\\n      }\\n    })\\n    // update the node panel when the cursor leaves a node\\n    .on(\\\"mouseleave\\\", function(d) { onMouseLeave(d3.select(this)); })\\n    // retain focus on an element when it is clicked\\n    .on(\\\"click\\\", function(d) { onClick(d3.select(this)); });\\n\\n\\n\\n  // mouse interactions for panel close buttons\\n  panel_close_btns_s\\n    .on(\\\"click\\\", function(d)\\n    {\\n      let s = saved_elt_s;\\n      onMouseEnter(s);\\n      onClick(s);\\n      onMouseLeave(s);\\n    });\\n}\\n\\n\\n\\n// load data from .json files\\nvar url = new URL(document.URL);\\nvar p = url.searchParams.get(\\\"policy\\\");\\nvar v = url.searchParams.get(\\\"visual\\\");\\nif(v === null)\\n{\\n  v = \\\"default.json\\\";\\n}\\n\\nd3.json(\\\"data/policies/\\\" + p).then(function(policy_json)\\n{\\n  d3.json(\\\"data/visual_customizations/\\\" + v).then(function(visual_json)\\n  {\\n    // copy data from .json files\\n    pol = policy_json;\\n    vis = visual_json;\\n\\n    nodes = pol.nodes;\\n    node_types = pol.node_types;\\n    link_types = pol.link_types;\\n    use_types = pol.use_types;\\n\\n    main();\\n  });\\n});\\n\"]}","code":"!function(t){var e={};function n(i){if(e[i])return e[i].exports;var l=e[i]={i:i,l:!1,exports:{}};return t[i].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var l in t)n.d(i,l,function(e){return t[e]}.bind(null,l));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=0)}([function(t,e){var n,i,l,r,a,o,d,c,s,u,_={NODE:\"node\",LINK:\"link\",USE:\"use\"},f=3,p=\"pat_opts\",h=[],y=null,k=[],w=[],b=d3.select(\"#canvas\"),m=b.append(\"g\"),g=d3.select(\"#node_panel_box\"),x=d3.select(\"#link_panel_box\"),v=g.select(\"#node_panel\"),j=x.select(\"#link_panel\"),M=v.select(\"#node_panel_opts_box\"),A=v.select(\"#node_panel_actions_box\"),U=x.select(\"#link_panel_graphic\"),B=d3.selectAll(\".close_btn\"),P=d3.tree(),S=[];function O(t){return l.find(function(e){return e.id===t})}function I(t){return a.find(function(e){return e.id===t})}function C(t){return o.find(function(e){return e.id===t})}function E(t){return 0===t.layer?i.display.r*i.node.dist_from_center_proportions[1]:i.node.r}function L(t){var e=O(t.source),n=O(t.dest);return N(z(e.x,e.y,n.x,n.y,n.r+i.node.outline_width+i.link.head_to_node_dist))}function z(t,e,n,i,l){return Math.sqrt(Math.pow(n-t,2)+Math.pow(i-e,2))-l}function N(t){var e=t-i.link.head_len,n=i.link.width/2,l=i.link.head_width/2;return\"0 0, \"+n+\" 0, \"+n+\" \"+e+\", \"+l+\" \"+e+\", 0 \"+t+\", \"+-l+\" \"+e+\", \"+-n+\" \"+e+\", \"+-n+\" 0, 0 0\"}function K(t){var e=O(t.source),n=O(t.dest);return 180*Math.atan2(e.y-n.y,e.x-n.x)/Math.PI+90}function T(t){return t.identifiable?i.node.outline_color_identifiable:i.node.outline_color_unidentifiable}function R(t){var e=O(t.dest);return e.all_data?i.link.fill_color_all_data:e.identifiable?i.link.fill_color_identifiable:i.link.fill_color_unidentifiable}function q(t){return O(t.dest).identifiable?i.link.outline_color_identifiable:i.link.outline_color_unidentifiable}function D(t){return O(t).identifiable?i.link.outline_color_identifiable:i.link.outline_color_unidentifiable}function Y(t){return t.all_data?i.use_icon.fill_color_all_data:t.unknown?i.use_icon.fill_color_unknown:i.use_icon.fill_color_normal}function F(t){return t.identifiable?\"url(#pat_\"+t.type+\"_identifiable)\":\"url(#pat_\"+t.type+\"_unidentifiable)\"}function G(t){return O(t.dest).identifiable?\"url(#pat_\"+t.type+\"_identifiable)\":\"url(#pat_\"+t.type+\"_unidentifiable)\"}function H(){return\"url(#\"+p+\")\"}function J(t,e){return e<=0?t:J({id:null,children:[t]},e-1)}function Q(t){var e,n;t.identifiable?(e=i.node_panel.fill_color_identifiable,n=i.node_panel.outline_color_identifiable):(e=i.node_panel.fill_color_unidentifiable,n=i.node_panel.outline_color_unidentifiable),v.style(\"background-color\",e).style(\"border-color\",n),v.select(\"h1\").html(t.label),v.select(\"p\").html(t.text),t.opts?(M.select(\"p\").html(t.opts_text),M.style(\"display\",\"flex\")):M.style(\"display\",\"none\");for(var l=[],r=[],a=null,o=0;o<t.uses.length;o++)C(t.uses[o]).all_data?a=t.uses[o]:l.push({type:t.uses[o],elt_type:_.USE});for(var d=0;d<t.successor_links.length;d++){var c=t.successor_links[d];r.includes(c.type)||I(c.type).all_data||(l.push(c),l[l.length-1].elt_type=_.LINK,r.push(c.type))}if(null!==a&&l.push({type:a,elt_type:_.USE}),0===l.length)A.style(\"display\",\"none\");else{A.style(\"display\",\"block\"),A.select(\"h2\").html(t.data_handler+\" can use this data to...\"),A.selectAll(\"div\").remove();var s=A.selectAll(\"div\").data(l).enter().append(\"div\").classed(\"panel_list_item_box\",!0).style(\"border-bottom\",i.node_panel.outline_width+\"px solid \"+n);A.select(\"div:last-child\").style(\"border-bottom\",\"none\");var u=i.use_icon.r+i.use_icon.outline_width,f=s.append(\"svg\").attr(\"height\",2*u+\"px\"),p=f.filter(function(t){return t.elt_type===_.USE}),y=f.filter(function(t){return t.elt_type===_.LINK});p.style(\"width\",2*u+\"px\"),y.style(\"width\",5*u+i.link.outline_width+\"px\"),p.append(\"circle\").attr(\"r\",i.use_icon.r).attr(\"cx\",u).attr(\"cy\",u).attr(\"fill\",function(t){return\"url(#pat_\"+t.type+\")\"}).attr(\"stroke\",i.use_icon.outline_color).attr(\"stroke-width\",i.use_icon.outline_width),y.append(\"circle\").attr(\"r\",i.use_icon.r).attr(\"cx\",4*u+i.link.outline_width).attr(\"cy\",u).attr(\"fill\",function(t){return F(O(t.successor_id))}).attr(\"stroke\",function(t){return T(O(t.successor_id))}).attr(\"stroke-width\",i.use_icon.outline_width),y.append(\"polyline\").attr(\"transform\",\"translate(\"+i.link.outline_width+\",\"+u+\") rotate(270)\").attr(\"points\",N(z(0,u,4*u,u,u+i.link.head_to_node_dist))).attr(\"fill\",function(t){return function(t){var e=O(t);return e.all_data?i.link.fill_color_all_data:e.identifiable?i.link.fill_color_identifiable:i.link.fill_color_unidentifiable}(t.successor_id)}).attr(\"stroke\",function(t){return D(t.successor_id)}).attr(\"stroke-width\",i.link.outline_width),y.filter(function(t){return I(t.type).display_on_link}).append(\"circle\").attr(\"transform\",function(t){return\"translate(\"+((z(0,u,4*u,u,u+i.link.head_to_node_dist)-i.link.head_len)/2+i.link.outline_width)+\",\"+u+\")\"}).attr(\"r\",i.link_icon_on_link.r).attr(\"fill\",function(e){return G((n=t.id+\"->\"+e.successor_id,h.find(function(t){return t.id===n})));var n}).attr(\"stroke\",function(t){return D(t.successor_id)}).attr(\"stroke-width\",i.link_icon.outline_width),s.filter(function(t){return t.elt_type===_.USE}).append(\"p\").html(function(t){return C(t.type).description}),s.filter(function(t){return t.elt_type===_.LINK}).append(\"p\").html(function(t){return I(t.type).description})}g.style(\"display\",\"inline-block\")}function V(t){t.classed(\"node\")?Q(t.datum()):function(t){var e,n,l=O(t.source),r=O(t.dest);r.identifiable?(e=i.link_panel.fill_color_identifiable,n=i.link_panel.outline_color_identifiable):(e=i.link_panel.fill_color_unidentifiable,n=i.link_panel.outline_color_unidentifiable),j.style(\"background-color\",e).style(\"border-color\",n);var a=i.node.r+i.node.outline_width;U.select(\"polyline\").attr(\"points\",N(z(a,a,i.link_panel_graphic.dist_between_nodes+a,a,a+i.link.head_to_node_dist))).attr(\"fill\",R(t)).attr(\"stroke\",q(t)).attr(\"stroke-width\",i.link.outline_width),U.select(\"circle\").attr(\"fill\",F(l)).attr(\"stroke\",T(l)),U.select(\"circle:nth-child(3)\").attr(\"fill\",F(r)).attr(\"stroke\",T(r)),j.select(\"circle\").attr(\"fill\",G(t)).attr(\"stroke\",q(t)),j.select(\"h1\").html(I(t.type).label),j.select(\"p\").html(t.text),x.style(\"display\",\"inline-block\")}(t.datum())}function W(){g.style(\"display\",\"none\"),x.style(\"display\",\"none\")}function X(t,e,n){t.selectAll(\"*\").interrupt().transition(),t.selectAll(\"*\").attr(\"stroke\",e).attr(\"stroke-width\",n)}function Z(t,e,n,i){t.select(\"*\").transition().attr(\"r\",e).attr(\"stroke\",n).attr(\"stroke-width\",i),t.select(\"*:nth-child(2)\").transition().attr(\"stroke\",n).attr(\"stroke-width\",i)}function $(t,e,n){t.selectAll(\"*\").transition().attr(\"stroke\",e).attr(\"stroke-width\",n)}function tt(t){var e=[];if(0===t.layer){for(var n=0;n<t.successor_links.length;n++){var i=O(t.successor_links[n].successor_id);i.all_data&&(e.push(t.id+\"->\"+i.id),e.push(i.id),e=e.concat(tt(i)))}e=e.concat(S.map(function(t){return t.id}))}else for(var l=0;l<t.successor_links.length;l++){var r=O(t.successor_links[l].successor_id);e.push(t.id+\"->\"+r.id),e.push(r.id),e=e.concat(tt(r))}return t.primary&&e.push(u.id),e}function et(t){var e,n;W(),V(t),w=t.classed(\"node\")?tt(t.datum()):(e=t.datum(),(n=tt(O(e.dest))).push(e.dest),n),null!==y&&t.datum().id===y.datum().id||(t.classed(\"node\")?Z(t,t.datum().r*(0===t.datum().layer?1.05:1.3),i.node.outline_color_focus,i.node.outline_width_focus):$(t,i.link.outline_color_focus,i.link.outline_width_focus));var l=c.filter(function(t){return w.includes(t.id)&&(null===y||t.id!==y.datum().id)}),r=s.filter(function(t){return w.includes(t.id)&&(null===y||t.id!==y.datum().id)});Z(l,function(t){return t.r*(0===t.layer?1.02:1.1)},i.node.outline_color_focus,i.node.outline_width_focus),$(r,i.link.outline_color_focus,i.link.outline_width_focus)}function nt(t){if(W(),null===y){t.classed(\"node\")?Z(t,t.datum().r,T(t.datum()),i.node.outline_width):$(t,q(t.datum()),i.link.outline_width);var e=c.filter(function(t){return w.includes(t.id)}),n=s.filter(function(t){return w.includes(t.id)});Z(e,function(t){return t.r},T,i.node.outline_width),$(n,q,i.link.outline_width)}else if(V(y),t.datum().id!==y.datum().id){k.includes(t.datum().id)?t.classed(\"node\")?Z(t,t.datum().r*(0===t.datum().layer?1.02:1.1),i.node.outline_color_focus,i.node.outline_width_focus):$(t,i.link.outline_color_focus,i.link.outline_width_focus):t.classed(\"node\")?Z(t,t.datum().r,T(t.datum()),i.node.outline_width):$(t,q(t.datum()),i.link.outline_width);var l=c.filter(function(t){return w.includes(t.id)&&y.datum().id!==t.id&&!k.includes(t.id)}),r=s.filter(function(t){return w.includes(t.id)&&y.datum().id!==t.id&&!k.includes(t.id)});Z(l,function(t){return t.r},T,i.node.outline_width),$(r,q,i.link.outline_width)}w=null}function it(t){if(null!==y&&t.datum().id===y.datum().id)X(t,t.classed(\"node\")?i.node.outline_color_focus:i.link.outline_color_focus,t.classed(\"node\")?i.node.outline_width_focus:i.link.outline_width_focus),y=null,k=[];else{var e=w;if(null!==y){e.includes(y.datum().id)?y.classed(\"node\")?Z(y,y.datum().r*(0===y.datum().layer?1.02:1.1),i.node.outline_color_focus,i.node.outline_width_focus):$(y,i.link.outline_color_focus,i.link.outline_width_focus):y.classed(\"node\")?Z(y,y.datum().r,T(y.datum()),i.node.outline_width):$(y,q(y.datum()),i.link.outline_width);var n=c.filter(function(n){return k.includes(n.id)&&n.id!==t.datum().id&&!e.includes(n.id)}),l=s.filter(function(n){return k.includes(n.id)&&n.id!==t.datum().id&&!e.includes(n.id)});Z(n,function(t){return t.r},T,i.node.outline_width),$(l,q,i.link.outline_width)}X(t,t.classed(\"node\")?i.node.outline_color_saved:i.link.outline_color_saved,t.classed(\"node\")?i.node.outline_width_saved:i.link.outline_width_saved),y=t,k=e}}function lt(){d3.select(\"h1\").html(n.title),d3.select(\"p\").html(n.intro),function(){var t=b.select(\"defs\").selectAll(\".node_pat_identifiable\").data(r).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_identifiable\"}).classed(\".node_pat_identifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");t.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?i.node.fill_color_all_data:i.node.fill_color_identifiable}),t.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_identifiable});var e=b.select(\"defs\").selectAll(\".node_pat_unidentifiable\").data(r).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_unidentifiable\"}).classed(\".node_pat_unidentifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");e.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?i.node.fill_color_all_data:i.node.fill_color_unidentifiable}),e.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_unidentifiable});var n=b.select(\"defs\").selectAll(\".link_pat_identifiable\").data(a).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_identifiable\"}).classed(\".link_pat_identifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");n.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?i.node.fill_color_all_data:i.link.fill_color_identifiable}),n.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_identifiable});var l=b.select(\"defs\").selectAll(\".link_pat_unidentifiable\").data(a).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id+\"_unidentifiable\"}).classed(\".link_pat_unidentifiable\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");l.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",function(t){return t.all_data?i.node.fill_color_all_data:i.link.fill_color_unidentifiable}),l.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image_unidentifiable});var d=b.select(\"defs\").selectAll(\".use_pat\").data(o).enter().append(\"pattern\").attr(\"id\",function(t){return\"pat_\"+t.id}).classed(\".use_pat\",!0).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");d.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",Y),d.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",function(t){return t.image});var c=b.select(\"defs\").append(\"pattern\").attr(\"id\",p).attr(\"width\",\"1\").attr(\"height\",\"1\").attr(\"patternContentUnits\",\"objectBoundingBox\");c.append(\"circle\").attr(\"cx\",\".5\").attr(\"cy\",\".5\").attr(\"r\",\".5\").attr(\"fill\",i.opts_node_icon.fill_color),c.append(\"image\").attr(\"x\",\".2\").attr(\"y\",\".2\").attr(\"width\",\".6\").attr(\"height\",\".6\").attr(\"xlink:href\",i.opts_icon.image)}();var t=i.display.r,e=i.node.r+i.node.outline_width,_=i.link_icon.r+i.link_icon.outline_width,k=i.opts_panel_icon.r+i.opts_panel_icon.outline_width,w=2*(i.node_panel.padding+i.node_panel.outline_width),g=2*t-w,x=2*e,A=2*(i.link_panel.padding+i.link_panel.outline_width),C=2*t-A-x-i.link_panel_graphic.margin_bottom;d=i.bg_circle.r_proportions.map(function(e){return e*t}),b.attr(\"width\",2*t).attr(\"height\",2*t),m.attr(\"transform\",\"translate(\"+t+\",\"+t+\")\"),v.style(\"border\",i.node_panel.outline_width+\"px solid\").style(\"width\",i.node_panel.width+\"px\").style(\"max-height\",g+\"px\").style(\"padding\",i.node_panel.padding+\"px\"),M.select(\"svg\").attr(\"width\",2*k).attr(\"height\",2*k),M.select(\"h2\").html(\"You have some control over this data.\"),M.select(\"circle\").attr(\"cx\",k).attr(\"cy\",k).attr(\"r\",i.opts_panel_icon.r).attr(\"fill\",H()).attr(\"stroke\",i.opts_panel_icon.outline_color).attr(\"stroke-width\",i.opts_panel_icon.outline_width),j.style(\"border\",i.link_panel.outline_width+\"px solid\").style(\"width\",i.link_panel.width+\"px\").style(\"max-height\",C+\"px\").style(\"padding\",i.link_panel.padding+\"px\"),U.attr(\"width\",i.link_panel_graphic.dist_between_nodes+2*e+\"px\").attr(\"height\",x).style(\"margin-bottom\",i.link_panel_graphic.margin_bottom),U.select(\"polyline\").attr(\"transform\",\"translate(\"+e+\",\"+e+\") rotate(270)\").attr(\"stroke-width\",0),U.select(\"circle\").attr(\"r\",i.node.r).attr(\"cx\",e).attr(\"cy\",e).attr(\"stroke-width\",i.node.outline_width),U.select(\"circle:nth-child(3)\").attr(\"r\",i.node.r).attr(\"cx\",i.link_panel_graphic.dist_between_nodes+e).attr(\"cy\",e).attr(\"stroke-width\",i.node.outline_width),j.select(\"svg\").attr(\"width\",2*_).attr(\"height\",2*_).select(\"circle\").attr(\"r\",i.link_icon.r).attr(\"cx\",_).attr(\"cy\",_).attr(\"stroke-width\",i.link_icon.outline_width),P.size([(2-i.layer_title.space_in_pi_radians)*Math.PI,t]).separation(function(t,e){return(t.parent===e.parent?1:2)/t.depth});for(var N=0;N<l.length;N++){var D=l[N];if(0===D.layer){u=D;for(var Q=0;Q<D.successor_links.length;Q++){var V=O(D.successor_links[Q].successor_id);1!==V.layer||V.all_data?V.primary=!1:(S.push(V),V.primary=!0)}}D.r=E(D);for(var W=0;W<D.successor_links.length;W++){var X=D.successor_links[W];h.push({id:D.id+\"->\"+X.successor_id,source:D.id,dest:X.successor_id,type:X.type,text:X.text})}D.layer+=1}u.layer-=1,S.map(function(t){return t.layer-=1});for(var Z=P(d3.hierarchy(function t(e){var n=e.successor_links.slice();if(0===n.length)return{id:e.id,children:[],siblings:[]};for(var i=[],l=[],r=0;r<n.length;r++){var a=O(n[r].successor_id),o=t(a);a.layer>e.layer?i.push(J(o,a.layer-e.layer-1)):a.layer===e.layer&&l.push(t(a));for(var d=0;d<o.siblings.length;d++)i.push(J(o.siblings[d],a.layer-e.layer-1))}return{id:e.id,children:i,siblings:l}}(u))).descendants(),$=function(t){var e=l[t],n=i.layer_title.space_in_pi_radians/2*Math.PI,r=Z.find(function(t){return t.data.id===e.id});e.x=(r.y=+r.y)*Math.cos((r.x-=Math.PI/2)+n),e.y=r.y*Math.sin(r.x+n),0!==e.layer&&(e.x=e.x*i.node.dist_from_center_proportions[e.layer]/(e.layer/f),e.y=e.y*i.node.dist_from_center_proportions[e.layer]/(e.layer/f))},tt=0;tt<l.length;tt++)$(tt);for(var lt=f-1;lt>0;lt--){var rt=d[lt];m.append(\"circle\").attr(\"r\",rt).attr(\"fill\",i.bg_circle.fill_color).attr(\"stroke\",i.bg_circle.outline_color).attr(\"stroke-width\",i.bg_circle.outline_width);var at=rt-i.layer_title.font_size-i.layer_title.dist_from_edge,ot=2===lt?\"Third parties\":n.provider_name;m.append(\"path\").attr(\"id\",\"text_layer_\"+lt).attr(\"d\",\"M-\"+at+\",0 a\"+at+\",\"+at+\" 0 0 1 \"+2*at+\",0\").attr(\"fill\",\"none\"),m.append(\"text\").classed(\"layer_title\",!0).attr(\"text-anchor\",\"middle\").style(\"font-size\",i.layer_title.font_size+\"px\").style(\"fill\",i.layer_title.color).append(\"textPath\").html(ot).attr(\"xlink:href\",\"#text_layer_\"+lt).attr(\"startOffset\",\"50%\")}(s=m.append(\"g\").selectAll(\".link\").data(h).enter().append(\"g\").classed(\"link\",!0).attr(\"transform\",function(t){var e=O(t.source);return\"translate(\"+e.x+\",\"+e.y+\") rotate(\"+K(t)+\")\"})).filter(function(t){return!I(t.type).all_data}).append(\"polyline\").attr(\"points\",L).attr(\"fill\",R).attr(\"stroke\",q).attr(\"stroke-width\",i.link.outline_width),s.filter(function(t){return I(t.type).display_on_link}).append(\"circle\").attr(\"transform\",function(t){var e=O(t.source),n=O(t.dest);return\"translate(0,\"+(z(e.x,e.y,n.x,n.y,n.r+i.node.outline_width+i.link.head_to_node_dist)-i.link.head_len+e.r)/2+\") rotate(\"+-K(t)+\")\"}).attr(\"r\",i.link_icon_on_link.r).attr(\"fill\",G).attr(\"stroke\",q).attr(\"stroke-width\",i.link_icon.outline_width),s.on(\"mouseenter\",function(t){et(d3.select(this)),d3.select(this).raise()}).on(\"mouseleave\",function(t){nt(d3.select(this))}).on(\"click\",function(t){it(d3.select(this))}),(c=m.append(\"g\").selectAll(\".node\").data(l).enter().append(\"g\").classed(\"node\",!0).attr(\"transform\",function(t){return\"translate(\"+t.x+\",\"+t.y+\")\"})).append(\"circle\").attr(\"r\",E).attr(\"fill\",F).attr(\"stroke\",T).attr(\"stroke-width\",i.node.outline_width),c.filter(function(t){return!0===t.opts}).append(\"circle\").attr(\"cx\",i.opts_node_icon.cx).attr(\"cy\",i.opts_node_icon.cy).attr(\"r\",i.opts_node_icon.r).attr(\"fill\",H()).attr(\"stroke\",i.opts_node_icon.outline_color).attr(\"stroke-width\",i.opts_node_icon.outline_width),c.on(\"mouseenter\",function(t){et(d3.select(this)),0!==t.layer&&d3.select(this).raise()}).on(\"mouseleave\",function(t){nt(d3.select(this))}).on(\"click\",function(t){it(d3.select(this))}),B.on(\"click\",function(t){var e=y;et(e),it(e),nt(e)})}var rt=new URL(document.URL),at=rt.searchParams.get(\"policy\"),ot=rt.searchParams.get(\"visual\");null===ot&&(ot=\"default.json\"),d3.json(\"data/policies/\"+at).then(function(t){d3.json(\"data/visual_customizations/\"+ot).then(function(e){i=e,l=(n=t).nodes,r=n.node_types,a=n.link_types,o=n.use_types,lt()})})}]);","extractedComments":[]}